#!/usr/bin/env node
// Generated by psc version 0.6.3
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    function cons(e) {  return function(l) {    return [e].concat(l);  };};
    function showStringImpl(s) {  return JSON.stringify(s);};
    function showNumberImpl(n) {  return n.toString();};
    function numAdd(n1) {  return function(n2) {    return n1 + n2;  };};
    function numSub(n1) {  return function(n2) {    return n1 - n2;  };};
    function numMul(n1) {  return function(n2) {    return n1 * n2;  };};
    function numDiv(n1) {  return function(n2) {    return n1 / n2;  };};
    function numMod(n1) {  return function(n2) {    return n1 % n2;  };};
    function numNegate(n) {  return -n;};
    function refEq(r1) {  return function(r2) {    return r1 === r2;  };};
    function refIneq(r1) {  return function(r2) {    return r1 !== r2;  };};
    function unsafeCompareImpl(lt) {  return function(eq) {    return function(gt) {      return function(x) {        return function(y) {          return x < y ? lt : x > y ? gt : eq;        };      };    };  };};
    function boolAnd(b1) {  return function(b2) {    return b1 && b2;  };};
    function boolOr(b1) {  return function(b2) {    return b1 || b2;  };};
    function boolNot(b) {  return !b;};
    function concatString(s1) {  return function(s2) {    return s1 + s2;  };};
    var Unit = function (x) {
        return x;
    };
    var LT = (function () {
        function LT() {

        };
        LT.value = new LT();
        return LT;
    })();
    var GT = (function () {
        function GT() {

        };
        GT.value = new GT();
        return GT;
    })();
    var EQ = (function () {
        function EQ() {

        };
        EQ.value = new EQ();
        return EQ;
    })();
    var Semigroupoid = function ($less$less$less) {
        this["<<<"] = $less$less$less;
    };
    var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
        this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
        this.id = id;
    };
    var Show = function (show) {
        this.show = show;
    };
    var Functor = function ($less$dollar$greater) {
        this["<$>"] = $less$dollar$greater;
    };
    var Apply = function ($less$times$greater, __superclass_Prelude$dotFunctor_0) {
        this["<*>"] = $less$times$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
        this.pure = pure;
    };
    var Bind = function ($greater$greater$eq, __superclass_Prelude$dotApply_0) {
        this[">>="] = $greater$greater$eq;
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    };
    var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
    };
    var Num = function ($percent, $times, $plus, $minus, $div, negate) {
        this["%"] = $percent;
        this["*"] = $times;
        this["+"] = $plus;
        this["-"] = $minus;
        this["/"] = $div;
        this.negate = negate;
    };
    var Eq = function ($div$eq, $eq$eq) {
        this["/="] = $div$eq;
        this["=="] = $eq$eq;
    };
    var Ord = function (__superclass_Prelude$dotEq_0, compare) {
        this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
        this.compare = compare;
    };
    var BoolLike = function ($amp$amp, not, $bar$bar) {
        this["&&"] = $amp$amp;
        this.not = not;
        this["||"] = $bar$bar;
    };
    var Semigroup = function ($less$greater) {
        this["<>"] = $less$greater;
    };
    var $bar$bar = function (dict) {
        return dict["||"];
    };
    var $greater$greater$eq = function (dict) {
        return dict[">>="];
    };
    var $eq$eq = function (dict) {
        return dict["=="];
    };
    var $less$greater = function (dict) {
        return dict["<>"];
    };
    var $less$less$less = function (dict) {
        return dict["<<<"];
    };
    var $greater$greater$greater = function (__dict_Semigroupoid_0) {
        return function (f) {
            return function (g) {
                return $less$less$less(__dict_Semigroupoid_0)(g)(f);
            };
        };
    };
    var $less$times$greater = function (dict) {
        return dict["<*>"];
    };
    var $less$dollar$greater = function (dict) {
        return dict["<$>"];
    };
    var $colon = cons;
    var $minus = function (dict) {
        return dict["-"];
    };
    var $plus$plus = function (__dict_Semigroup_2) {
        return $less$greater(__dict_Semigroup_2);
    };
    var $plus = function (dict) {
        return dict["+"];
    };
    var $amp$amp = function (dict) {
        return dict["&&"];
    };
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var unsafeCompare = unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
    var unit = {};
    var showString = new Show(showStringImpl);
    var showNumber = new Show(showNumberImpl);
    var show = function (dict) {
        return dict.show;
    };
    var semigroupoidArr = new Semigroupoid(function (f) {
        return function (g) {
            return function (x) {
                return f(g(x));
            };
        };
    });
    var semigroupString = new Semigroup(concatString);
    var pure = function (dict) {
        return dict.pure;
    };
    var $$return = function (__dict_Monad_5) {
        return pure(__dict_Monad_5["__superclass_Prelude.Applicative_0"]());
    };
    var otherwise = true;
    var numNumber = new Num(numMod, numMul, numAdd, numSub, numDiv, numNegate);
    var not = function (dict) {
        return dict.not;
    };
    var liftA1 = function (__dict_Applicative_7) {
        return function (f) {
            return function (a) {
                return $less$times$greater(__dict_Applicative_7["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_7)(f))(a);
            };
        };
    };
    var id = function (dict) {
        return dict.id;
    };
    var flip = function (f) {
        return function (b) {
            return function (a) {
                return f(a)(b);
            };
        };
    };
    var eqString = new Eq(refIneq, refEq);
    var ordString = new Ord(function () {
        return eqString;
    }, unsafeCompare);
    var eqNumber = new Eq(refIneq, refEq);
    var ordNumber = new Ord(function () {
        return eqNumber;
    }, unsafeCompare);
    var $$const = function (_76) {
        return function (_77) {
            return _76;
        };
    };
    var compare = function (dict) {
        return dict.compare;
    };
    var $less$eq = function (__dict_Ord_12) {
        return function (a1) {
            return function (a2) {
                var _672 = compare(__dict_Ord_12)(a1)(a2);
                if (_672 instanceof GT) {
                    return false;
                };
                return true;
            };
        };
    };
    var $greater$eq = function (__dict_Ord_14) {
        return function (a1) {
            return function (a2) {
                var _673 = compare(__dict_Ord_14)(a1)(a2);
                if (_673 instanceof LT) {
                    return false;
                };
                return true;
            };
        };
    };
    var categoryArr = new Category(function () {
        return semigroupoidArr;
    }, function (x) {
        return x;
    });
    var boolLikeBoolean = new BoolLike(boolAnd, boolNot, boolOr);
    var ap = function (__dict_Monad_15) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                    return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                        return $$return(__dict_Monad_15)(_2(_1));
                    });
                });
            };
        };
    };
    return {
        Unit: Unit, 
        LT: LT, 
        GT: GT, 
        EQ: EQ, 
        Semigroup: Semigroup, 
        BoolLike: BoolLike, 
        Ord: Ord, 
        Eq: Eq, 
        Num: Num, 
        Monad: Monad, 
        Bind: Bind, 
        Applicative: Applicative, 
        Apply: Apply, 
        Functor: Functor, 
        Show: Show, 
        Category: Category, 
        Semigroupoid: Semigroupoid, 
        unit: unit, 
        "++": $plus$plus, 
        "<>": $less$greater, 
        not: not, 
        "||": $bar$bar, 
        "&&": $amp$amp, 
        ">=": $greater$eq, 
        "<=": $less$eq, 
        compare: compare, 
        refIneq: refIneq, 
        refEq: refEq, 
        "==": $eq$eq, 
        "-": $minus, 
        "+": $plus, 
        ap: ap, 
        "return": $$return, 
        ">>=": $greater$greater$eq, 
        liftA1: liftA1, 
        pure: pure, 
        "<*>": $less$times$greater, 
        "<$>": $less$dollar$greater, 
        show: show, 
        cons: cons, 
        ":": $colon, 
        "$": $dollar, 
        id: id, 
        ">>>": $greater$greater$greater, 
        "<<<": $less$less$less, 
        "const": $$const, 
        flip: flip, 
        otherwise: otherwise, 
        semigroupoidArr: semigroupoidArr, 
        categoryArr: categoryArr, 
        showString: showString, 
        showNumber: showNumber, 
        numNumber: numNumber, 
        eqString: eqString, 
        eqNumber: eqNumber, 
        ordNumber: ordNumber, 
        ordString: ordString, 
        boolLikeBoolean: boolLikeBoolean, 
        semigroupString: semigroupString
    };
})();
var PS = PS || {};
PS.Prelude_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function unsafeIndex(xs) {  return function(n) {    return xs[n];  };};
    return {
        unsafeIndex: unsafeIndex
    };
})();
var PS = PS || {};
PS.Node_Encoding = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var ASCII = (function () {
        function ASCII() {

        };
        ASCII.value = new ASCII();
        return ASCII;
    })();
    var UTF8 = (function () {
        function UTF8() {

        };
        UTF8.value = new UTF8();
        return UTF8;
    })();
    var UTF16LE = (function () {
        function UTF16LE() {

        };
        UTF16LE.value = new UTF16LE();
        return UTF16LE;
    })();
    var UCS2 = (function () {
        function UCS2() {

        };
        UCS2.value = new UCS2();
        return UCS2;
    })();
    var Base64 = (function () {
        function Base64() {

        };
        Base64.value = new Base64();
        return Base64;
    })();
    var Binary = (function () {
        function Binary() {

        };
        Binary.value = new Binary();
        return Binary;
    })();
    var Hex = (function () {
        function Hex() {

        };
        Hex.value = new Hex();
        return Hex;
    })();
    var showEncoding = new Prelude.Show(function (_100) {
        if (_100 instanceof ASCII) {
            return "ascii";
        };
        if (_100 instanceof UTF8) {
            return "utf8";
        };
        if (_100 instanceof UTF16LE) {
            return "utf16le";
        };
        if (_100 instanceof UCS2) {
            return "ucs2";
        };
        if (_100 instanceof Base64) {
            return "base64";
        };
        if (_100 instanceof Binary) {
            return "binary";
        };
        if (_100 instanceof Hex) {
            return "hex";
        };
        throw new Error("Failed pattern match");
    });
    return {
        ASCII: ASCII, 
        UTF8: UTF8, 
        UTF16LE: UTF16LE, 
        UCS2: UCS2, 
        Base64: Base64, 
        Binary: Binary, 
        Hex: Hex, 
        showEncoding: showEncoding
    };
})();
var PS = PS || {};
PS.Data_Function = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function runFn2(fn) {  return function(a) {    return function(b) {      return fn(a, b);    };  };};
    function runFn3(fn) {  return function(a) {    return function(b) {      return function(c) {        return fn(a, b, c);      };    };  };};
    function runFn4(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return fn(a, b, c, d);        };      };    };  };};
    function runFn5(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return fn(a, b, c, d, e);          };        };      };    };  };};
    var on = function (f) {
        return function (g) {
            return function (x) {
                return function (y) {
                    return f(g(x))(g(y));
                };
            };
        };
    };
    return {
        runFn5: runFn5, 
        runFn4: runFn4, 
        runFn3: runFn3, 
        runFn2: runFn2, 
        on: on
    };
})();
var PS = PS || {};
PS.Data_Foreign_EasyFFI = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function unsafeForeignProcedure(args) {  return function (stmt) {    return Function(wrap(args.slice()))();    function wrap() {      return !args.length ? stmt : 'return function (' + args.shift() + ') { ' + wrap() + ' };';    }  };};
    var unsafeForeignFunction = function (args) {
        return function (expr) {
            return unsafeForeignProcedure(args)("return " + (expr + ";"));
        };
    };
    return {
        unsafeForeignProcedure: unsafeForeignProcedure, 
        unsafeForeignFunction: unsafeForeignFunction
    };
})();
var PS = PS || {};
PS.Data_Char = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Char = function (x) {
        return x;
    };
    var charString = function (_106) {
        return _106;
    };
    return {
        charString: charString
    };
})();
var PS = PS || {};
PS.Control_Monad_Error = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Error = function (noMsg, strMsg) {
        this.noMsg = noMsg;
        this.strMsg = strMsg;
    };
    var strMsg = function (dict) {
        return dict.strMsg;
    };
    return {
        Error: Error, 
        strMsg: strMsg
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function returnE(a) {  return function() {    return a;  };};
    function bindE(a) {  return function(f) {    return function() {      return f(a())();    };  };};
    function runPure(f) {  return f();};
    var monadEff = new Prelude.Monad(function () {
        return applicativeEff;
    }, function () {
        return bindEff;
    });
    var bindEff = new Prelude.Bind(bindE, function () {
        return applyEff;
    });
    var applyEff = new Prelude.Apply(Prelude.ap(monadEff), function () {
        return functorEff;
    });
    var applicativeEff = new Prelude.Applicative(function () {
        return applyEff;
    }, returnE);
    var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
    return {
        runPure: runPure, 
        bindE: bindE, 
        returnE: returnE, 
        functorEff: functorEff, 
        applyEff: applyEff, 
        applicativeEff: applicativeEff, 
        bindEff: bindEff, 
        monadEff: monadEff
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Exception = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    
  function showErrorImpl(err) {
    return err.stack || err.toString();
  }
  ;
    
  function error(msg) {
    return new Error(msg);
  }
  ;
    
  function throwException(e) {
    return function() {
      throw e;
    };
  }
  ;
    
  function catchException(c) {
    return function(t) {
      return function() {
        try {
          return t();
        } catch(e) {
          if (e instanceof Error || Object.prototype.toString.call(e) === '[object Error]') {
            return c(e)();
          } else {
            return c(new Error(e.toString()))();
          }
        }
      };
    };
  }
  ;
    var showError = new Prelude.Show(showErrorImpl);
    return {
        catchException: catchException, 
        throwException: throwException, 
        error: error, 
        showErrorImpl: showErrorImpl, 
        showError: showError
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    function unsafeInterleaveEff(f) {  return f;};
    return {
        unsafeInterleaveEff: unsafeInterleaveEff
    };
})();
var PS = PS || {};
PS.Debug_Trace = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    function trace(s) {  return function() {    console.log(s);    return {};  };};
    return {
        trace: trace
    };
})();
var PS = PS || {};
PS.Control_Lazy = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Lazy1 = function (defer1) {
        this.defer1 = defer1;
    };
    var defer1 = function (dict) {
        return dict.defer1;
    };
    return {
        Lazy1: Lazy1, 
        defer1: defer1
    };
})();
var PS = PS || {};
PS.Data_Lazy = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad = PS.Control_Comonad;
    function defer(thunk) {    if (this instanceof defer) {      this.thunk = thunk;      return this;    } else {      return new defer(thunk);    }}defer.prototype.force = function () {    var value = this.thunk();    delete this.thunk;    this.force = function () {        return value;    };    return value;};;
    function force(l) {  return l.force();};
    var functorLazy = new Prelude.Functor(function (f) {
        return function (l) {
            return defer(function (_) {
                return f(force(l));
            });
        };
    });
    return {
        force: force, 
        defer: defer, 
        functorLazy: functorLazy
    };
})();
var PS = PS || {};
PS.Control_Apply = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $less$times = function (__dict_Apply_62) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_62)(Prelude["<$>"](__dict_Apply_62["__superclass_Prelude.Functor_0"]())(Prelude["const"])(a))(b);
            };
        };
    };
    var $times$greater = function (__dict_Apply_63) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_63)(Prelude["<$>"](__dict_Apply_63["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryArr)))(a))(b);
            };
        };
    };
    return {
        "*>": $times$greater, 
        "<*": $less$times
    };
})();
var PS = PS || {};
PS.Control_Alt = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Alt = function ($less$bar$greater, __superclass_Prelude$dotFunctor_0) {
        this["<|>"] = $less$bar$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$bar$greater = function (dict) {
        return dict["<|>"];
    };
    return {
        Alt: Alt, 
        "<|>": $less$bar$greater
    };
})();
var PS = PS || {};
PS.Control_Plus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Plus = function (__superclass_Control$dotAlt$dotAlt_0, empty) {
        this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
        this.empty = empty;
    };
    return {
        Plus: Plus
    };
})();
var PS = PS || {};
PS.Control_Alternative = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Alternative = function (__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
        this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
    };
    var some = function (__dict_Alternative_69) {
        return function (__dict_Lazy1_70) {
            return function (v) {
                return Prelude["<*>"]((__dict_Alternative_69["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Alternative_69["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(v))(Control_Lazy.defer1(__dict_Lazy1_70)(function (_) {
                    return many(__dict_Alternative_69)(__dict_Lazy1_70)(v);
                }));
            };
        };
    };
    var many = function (__dict_Alternative_71) {
        return function (__dict_Lazy1_72) {
            return function (v) {
                return Control_Alt["<|>"]((__dict_Alternative_71["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(__dict_Alternative_71)(__dict_Lazy1_72)(v))(Prelude.pure(__dict_Alternative_71["__superclass_Prelude.Applicative_0"]())([  ]));
            };
        };
    };
    return {
        Alternative: Alternative, 
        many: many, 
        some: some
    };
})();
var PS = PS || {};
PS.Data_Either = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Left = (function () {
        function Left(value0) {
            this.value0 = value0;
        };
        Left.create = function (value0) {
            return new Left(value0);
        };
        return Left;
    })();
    var Right = (function () {
        function Right(value0) {
            this.value0 = value0;
        };
        Right.create = function (value0) {
            return new Right(value0);
        };
        return Right;
    })();
    var functorEither = new Prelude.Functor(function (_153) {
        return function (_154) {
            if (_154 instanceof Left) {
                return new Left(_154.value0);
            };
            if (_154 instanceof Right) {
                return new Right(_153(_154.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
    var either = function (_150) {
        return function (_151) {
            return function (_152) {
                if (_152 instanceof Left) {
                    return _150(_152.value0);
                };
                if (_152 instanceof Right) {
                    return _151(_152.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var isLeft = either(Prelude["const"](true))(Prelude["const"](false));
    var applyEither = new Prelude.Apply(function (_155) {
        return function (_156) {
            if (_155 instanceof Left) {
                return new Left(_155.value0);
            };
            if (_155 instanceof Right) {
                return Prelude["<$>"](functorEither)(_155.value0)(_156);
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorEither;
    });
    var bindEither = new Prelude.Bind(either(function (e) {
        return function (_) {
            return new Left(e);
        };
    })(function (a) {
        return function (f) {
            return f(a);
        };
    }), function () {
        return applyEither;
    });
    var applicativeEither = new Prelude.Applicative(function () {
        return applyEither;
    }, Right.create);
    var altEither = new Control_Alt.Alt(function (_157) {
        return function (_158) {
            if (_157 instanceof Left) {
                return _158;
            };
            return _157;
        };
    }, function () {
        return functorEither;
    });
    return {
        Left: Left, 
        Right: Right, 
        isLeft: isLeft, 
        either: either, 
        functorEither: functorEither, 
        applyEither: applyEither, 
        applicativeEither: applicativeEither, 
        altEither: altEither, 
        bindEither: bindEither
    };
})();
var PS = PS || {};
PS.Data_Maybe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Extend = PS.Control_Extend;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Control_Plus = PS.Control_Plus;
    var Nothing = (function () {
        function Nothing() {

        };
        Nothing.value = new Nothing();
        return Nothing;
    })();
    var Just = (function () {
        function Just(value0) {
            this.value0 = value0;
        };
        Just.create = function (value0) {
            return new Just(value0);
        };
        return Just;
    })();
    var semigroupMaybe = function (__dict_Semigroup_91) {
        return new Prelude.Semigroup(function (_177) {
            return function (_178) {
                if (_177 instanceof Nothing) {
                    return _178;
                };
                if (_178 instanceof Nothing) {
                    return _177;
                };
                if (_177 instanceof Just && _178 instanceof Just) {
                    return new Just(Prelude["<>"](__dict_Semigroup_91)(_177.value0)(_178.value0));
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var maybe = function (_164) {
        return function (_165) {
            return function (_166) {
                if (_166 instanceof Nothing) {
                    return _164;
                };
                if (_166 instanceof Just) {
                    return _165(_166.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var functorMaybe = new Prelude.Functor(function (_167) {
        return function (_168) {
            if (_168 instanceof Just) {
                return new Just(_167(_168.value0));
            };
            return Nothing.value;
        };
    });
    var fromMaybe = function (a) {
        return maybe(a)(Prelude.id(Prelude.categoryArr));
    };
    var applyMaybe = new Prelude.Apply(function (_169) {
        return function (_170) {
            if (_169 instanceof Just) {
                return Prelude["<$>"](functorMaybe)(_169.value0)(_170);
            };
            if (_169 instanceof Nothing) {
                return Nothing.value;
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorMaybe;
    });
    var altMaybe = new Control_Alt.Alt(function (_171) {
        return function (_172) {
            if (_171 instanceof Nothing) {
                return _172;
            };
            return _171;
        };
    }, function () {
        return functorMaybe;
    });
    return {
        Nothing: Nothing, 
        Just: Just, 
        fromMaybe: fromMaybe, 
        maybe: maybe, 
        functorMaybe: functorMaybe, 
        applyMaybe: applyMaybe, 
        altMaybe: altMaybe, 
        semigroupMaybe: semigroupMaybe
    };
})();
var PS = PS || {};
PS.Data_Array = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    function length (xs) {  return xs.length;};
    function append (l1) {  return function (l2) {    return l1.concat(l2);  };};
    function reverse (l) {  return l.slice().reverse();};
    function drop (n) {  return function (l) {    return l.slice(n);  };};
    function slice (s) {  return function (e) {    return function (l) {      return l.slice(s, e);    };  };};
    function concatMap (f) {  return function (arr) {    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      Array.prototype.push.apply(result, f(arr[i]));    }    return result;  };};
    function map (f) {  return function (arr) {    var l = arr.length;    var result = new Array(l);    for (var i = 0; i < l; i++) {      result[i] = f(arr[i]);    }    return result;  };};
    function sortJS (f) {  return function (l) {    return l.slice().sort(function (x, y) {      return f(x)(y);    });  };};
    var span = (function () {
        var go = function (__copy__202) {
            return function (__copy__203) {
                return function (__copy__204) {
                    var _202 = __copy__202;
                    var _203 = __copy__203;
                    var _204 = __copy__204;
                    tco: while (true) {
                        if (_204.length >= 1) {
                            var _714 = _204.slice(1);
                            if (_203(_204[0])) {
                                var __tco__202 = Prelude[":"](_204[0])(_202);
                                var __tco__203 = _203;
                                _202 = __tco__202;
                                _203 = __tco__203;
                                _204 = _714;
                                continue tco;
                            };
                        };
                        return {
                            init: reverse(_202), 
                            rest: _204
                        };
                    };
                };
            };
        };
        return go([  ]);
    })();
    var sortBy = function (comp) {
        return function (xs) {
            var comp$prime = function (x) {
                return function (y) {
                    var _715 = comp(x)(y);
                    if (_715 instanceof Prelude.GT) {
                        return 1;
                    };
                    if (_715 instanceof Prelude.EQ) {
                        return 0;
                    };
                    if (_715 instanceof Prelude.LT) {
                        return -1;
                    };
                    throw new Error("Failed pattern match");
                };
            };
            return sortJS(comp$prime)(xs);
        };
    };
    var singleton = function (a) {
        return [ a ];
    };
    var semigroupArray = new Prelude.Semigroup(append);
    var $$null = function (_188) {
        if (_188.length === 0) {
            return true;
        };
        return false;
    };
    var mapMaybe = function (f) {
        return concatMap(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.maybe([  ])(singleton))(f));
    };
    var init = function (_187) {
        if (_187.length === 0) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just(slice(0)(length(_187) - 1)(_187));
    };
    var head = function (_184) {
        if (_184.length >= 1) {
            var _720 = _184.slice(1);
            return new Data_Maybe.Just(_184[0]);
        };
        return Data_Maybe.Nothing.value;
    };
    var groupBy = (function () {
        var go = function (__copy__199) {
            return function (__copy__200) {
                return function (__copy__201) {
                    var _199 = __copy__199;
                    var _200 = __copy__200;
                    var _201 = __copy__201;
                    tco: while (true) {
                        if (_201.length === 0) {
                            return reverse(_199);
                        };
                        if (_201.length >= 1) {
                            var _725 = _201.slice(1);
                            var sp = span(_200(_201[0]))(_725);
                            var __tco__199 = Prelude[":"](Prelude[":"](_201[0])(sp.init))(_199);
                            var __tco__200 = _200;
                            _199 = __tco__199;
                            _200 = __tco__200;
                            _201 = sp.rest;
                            continue tco;
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        return go([  ]);
    })();
    return {
        span: span, 
        groupBy: groupBy, 
        sortBy: sortBy, 
        concatMap: concatMap, 
        drop: drop, 
        reverse: reverse, 
        append: append, 
        length: length, 
        mapMaybe: mapMaybe, 
        map: map, 
        "null": $$null, 
        init: init, 
        head: head, 
        singleton: singleton, 
        semigroupArray: semigroupArray
    };
})();
var PS = PS || {};
PS.Data_Foreign = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Function = PS.Data_Function;
    var Data_Array = PS.Data_Array;
    var Data_Either = PS.Data_Either;
    
  function unsafeFromForeign(value) {
    return value;
  }
  ;
    
  function typeOf(value) {
    return typeof value;
  }
  ;
    
  function tagOf(value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  }
  ;
    
  function isNull(value) {
    return value === null;
  }
  ;
    
  function isUndefined(value) {
    return value === undefined;
  }
  ;
    var TypeMismatch = (function () {
        function TypeMismatch(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        TypeMismatch.create = function (value0) {
            return function (value1) {
                return new TypeMismatch(value0, value1);
            };
        };
        return TypeMismatch;
    })();
    var ErrorAtIndex = (function () {
        function ErrorAtIndex(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        ErrorAtIndex.create = function (value0) {
            return function (value1) {
                return new ErrorAtIndex(value0, value1);
            };
        };
        return ErrorAtIndex;
    })();
    var ErrorAtProperty = (function () {
        function ErrorAtProperty(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        ErrorAtProperty.create = function (value0) {
            return function (value1) {
                return new ErrorAtProperty(value0, value1);
            };
        };
        return ErrorAtProperty;
    })();
    var JSONError = (function () {
        function JSONError(value0) {
            this.value0 = value0;
        };
        JSONError.create = function (value0) {
            return new JSONError(value0);
        };
        return JSONError;
    })();
    var unsafeReadPrim = function (_205) {
        return function (_206) {
            if (tagOf(_206) === _205) {
                return Prelude.pure(Data_Either.applicativeEither)(unsafeFromForeign(_206));
            };
            return new Data_Either.Left(new TypeMismatch(_205, tagOf(_206)));
        };
    };
    var showForeignError = new Prelude.Show(function (_208) {
        if (_208 instanceof TypeMismatch) {
            return "Type mismatch: expected " + (_208.value0 + (", found " + _208.value1));
        };
        if (_208 instanceof ErrorAtIndex) {
            return "Error at array index " + (Prelude.show(Prelude.showNumber)(_208.value0) + (": " + Prelude.show(showForeignError)(_208.value1)));
        };
        if (_208 instanceof ErrorAtProperty) {
            return "Error at property " + (Prelude.show(Prelude.showString)(_208.value0) + (": " + Prelude.show(showForeignError)(_208.value1)));
        };
        if (_208 instanceof JSONError) {
            return "JSON error: " + _208.value0;
        };
        throw new Error("Failed pattern match");
    });
    var readString = unsafeReadPrim("String");
    return {
        TypeMismatch: TypeMismatch, 
        ErrorAtIndex: ErrorAtIndex, 
        ErrorAtProperty: ErrorAtProperty, 
        JSONError: JSONError, 
        readString: readString, 
        isUndefined: isUndefined, 
        isNull: isNull, 
        tagOf: tagOf, 
        typeOf: typeOf, 
        unsafeFromForeign: unsafeFromForeign, 
        showForeignError: showForeignError
    };
})();
var PS = PS || {};
PS.Data_Foreign_Index = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Data_Foreign = PS.Data_Foreign;
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    
  function unsafeReadPropImpl(f, s, key, value) {
    return value == null ? f : s(value[key]);
  }
  ;
    
  function unsafeHasOwnProperty(prop, value) {
    return Object.prototype.hasOwnProperty.call(value, prop);
  }
  ;
    
  function unsafeHasProperty(prop, value) {
    return prop in value;
  }
  ;
    var Index = function ($bang, errorAt, hasOwnProperty, hasProperty) {
        this["!"] = $bang;
        this.errorAt = errorAt;
        this.hasOwnProperty = hasOwnProperty;
        this.hasProperty = hasProperty;
    };
    var $bang = function (dict) {
        return dict["!"];
    };
    var unsafeReadProp = function (k) {
        return function (value) {
            return unsafeReadPropImpl(new Data_Either.Left(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Prelude.pure(Data_Either.applicativeEither), k, value);
        };
    };
    var prop = unsafeReadProp;
    var hasPropertyImpl = function (_213) {
        return function (_214) {
            if (Data_Foreign.isNull(_214)) {
                return false;
            };
            if (Data_Foreign.isUndefined(_214)) {
                return false;
            };
            if (Data_Foreign.typeOf(_214) === "object" || Data_Foreign.typeOf(_214) === "function") {
                return unsafeHasProperty(_213, _214);
            };
            return false;
        };
    };
    var hasOwnPropertyImpl = function (_211) {
        return function (_212) {
            if (Data_Foreign.isNull(_212)) {
                return false;
            };
            if (Data_Foreign.isUndefined(_212)) {
                return false;
            };
            if (Data_Foreign.typeOf(_212) === "object" || Data_Foreign.typeOf(_212) === "function") {
                return unsafeHasOwnProperty(_211, _212);
            };
            return false;
        };
    };
    var indexString = new Index(Prelude.flip(prop), Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl);
    var errorAt = function (dict) {
        return dict.errorAt;
    };
    return {
        Index: Index, 
        errorAt: errorAt, 
        "!": $bang, 
        prop: prop, 
        indexString: indexString
    };
})();
var PS = PS || {};
PS.Data_Array_ST = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_ST = PS.Control_Monad_ST;
    
  function runSTArray(f) {
    return f;
  };
    
  function emptySTArray() {
    return [];
  };
    
  function pushSTArrayImpl(arr, a) {
    return function() {
      arr.push(a);
      return {};
    };
  };
    var pushSTArray = function (arr) {
        return function (a) {
            return pushSTArrayImpl(arr, a);
        };
    };
    return {
        pushSTArray: pushSTArray, 
        emptySTArray: emptySTArray, 
        runSTArray: runSTArray
    };
})();
var PS = PS || {};
PS.Data_Maybe_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var fromJust = function (_225) {
        if (_225 instanceof Data_Maybe.Just) {
            return _225.value0;
        };
        throw new Error("Failed pattern match");
    };
    return {
        fromJust: fromJust
    };
})();
var PS = PS || {};
PS.Data_Array_Unsafe = (function () {
    "use strict";
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    var Data_Array = PS.Data_Array;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var Prelude = PS.Prelude;
    var last = function (xs) {
        return xs[Data_Array.length(xs) - 1];
    };
    var init = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Data_Array.init);
    return {
        init: init, 
        last: last
    };
})();
var PS = PS || {};
PS.Data_Monoid = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
        this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
        this.mempty = mempty;
    };
    var monoidString = new Monoid(function () {
        return Prelude.semigroupString;
    }, "");
    var monoidArray = new Monoid(function () {
        return Data_Array.semigroupArray;
    }, [  ]);
    var mempty = function (dict) {
        return dict.mempty;
    };
    return {
        Monoid: Monoid, 
        mempty: mempty, 
        monoidString: monoidString, 
        monoidArray: monoidArray
    };
})();
var PS = PS || {};
PS.Data_Tuple = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Lazy = PS.Control_Lazy;
    var Data_Array = PS.Data_Array;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Extend = PS.Control_Extend;
    var Tuple = (function () {
        function Tuple(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Tuple.create = function (value0) {
            return function (value1) {
                return new Tuple(value0, value1);
            };
        };
        return Tuple;
    })();
    var fst = function (_277) {
        return _277.value0;
    };
    return {
        Tuple: Tuple, 
        fst: fst
    };
})();
var PS = PS || {};
PS.Node_Yargs_Setup = (function () {
    "use strict";
    var Data_Foreign_EasyFFI = PS.Data_Foreign_EasyFFI;
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var usage = Data_Foreign_EasyFFI.unsafeForeignFunction([ "msg", "y" ])("y.usage(msg)");
    var string = Data_Foreign_EasyFFI.unsafeForeignFunction([ "key", "y" ])("y.string(key)");
    var semigroupYargsSetup = new Prelude.Semigroup(Data_Foreign_EasyFFI.unsafeForeignFunction([ "s1", "s2", "y" ])("s2(s1(y))"));
    var requiresArg = Data_Foreign_EasyFFI.unsafeForeignFunction([ "key", "y" ])("y.requiresArg(key)");
    var monoidYargsSetup = new Data_Monoid.Monoid(function () {
        return semigroupYargsSetup;
    }, Data_Foreign_EasyFFI.unsafeForeignFunction([ "y" ])("y"));
    var describe = Data_Foreign_EasyFFI.unsafeForeignFunction([ "key", "desc", "y" ])("y.describe(key, desc)");
    var demand = Data_Foreign_EasyFFI.unsafeForeignFunction([ "key", "msg", "y" ])("y.demand(key, msg)");
    var alias = Data_Foreign_EasyFFI.unsafeForeignFunction([ "key", "alias", "y" ])("y.alias(key, alias)");
    return {
        string: string, 
        describe: describe, 
        requiresArg: requiresArg, 
        demand: demand, 
        alias: alias, 
        usage: usage, 
        semigroupYargsSetup: semigroupYargsSetup, 
        monoidYargsSetup: monoidYargsSetup
    };
})();
var PS = PS || {};
PS.Node_Yargs = (function () {
    "use strict";
    var Data_Foreign_EasyFFI = PS.Data_Foreign_EasyFFI;
    var Prelude = PS.Prelude;
    var Data_Foreign = PS.Data_Foreign;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Node_Yargs_Setup = PS.Node_Yargs_Setup;
    function yargs() {  return require('yargs');};
    var setupWith = Data_Foreign_EasyFFI.unsafeForeignFunction([ "setup", "y", "" ])("setup(y)");
    var argv = Data_Foreign_EasyFFI.unsafeForeignFunction([ "y", "" ])("y.argv");
    var runYargs = function (setup) {
        return Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(yargs)(setupWith(setup)))(argv);
    };
    return {
        setupWith: setupWith, 
        argv: argv, 
        runYargs: runYargs, 
        yargs: yargs
    };
})();
var PS = PS || {};
PS.Data_Foldable = (function () {
    "use strict";
    var Data_Monoid = PS.Data_Monoid;
    var Prelude = PS.Prelude;
    var Control_Apply = PS.Control_Apply;
    var Data_Monoid_First = PS.Data_Monoid_First;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    
  function foldrArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = xs.length - 1; i >= 0; --i) {
          acc = f(xs[i])(acc);
        }
        return acc;
      }
    }
  };
    
  function foldlArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = 0, len = xs.length; i < len; ++i) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      }
    }
  };
    var Foldable = function (foldMap, foldl, foldr) {
        this.foldMap = foldMap;
        this.foldl = foldl;
        this.foldr = foldr;
    };
    var foldr = function (dict) {
        return dict.foldr;
    };
    var foldl = function (dict) {
        return dict.foldl;
    };
    var intercalate = function (__dict_Foldable_280) {
        return function (__dict_Monoid_281) {
            return function (sep) {
                return function (xs) {
                    var go = function (_422) {
                        return function (_423) {
                            if (_422.init) {
                                return {
                                    init: false, 
                                    acc: _423
                                };
                            };
                            return {
                                init: false, 
                                acc: Prelude["<>"](__dict_Monoid_281["__superclass_Prelude.Semigroup_0"]())(_422.acc)(Prelude["<>"](__dict_Monoid_281["__superclass_Prelude.Semigroup_0"]())(sep)(_423))
                            };
                        };
                    };
                    return (foldl(__dict_Foldable_280)(go)({
                        init: true, 
                        acc: Data_Monoid.mempty(__dict_Monoid_281)
                    })(xs)).acc;
                };
            };
        };
    };
    var mconcat = function (__dict_Foldable_282) {
        return function (__dict_Monoid_283) {
            return foldl(__dict_Foldable_282)(Prelude["<>"](__dict_Monoid_283["__superclass_Prelude.Semigroup_0"]()))(Data_Monoid.mempty(__dict_Monoid_283));
        };
    };
    var or = function (__dict_Foldable_284) {
        return foldl(__dict_Foldable_284)(Prelude["||"](Prelude.boolLikeBoolean))(false);
    };
    var foldableMaybe = new Foldable(function (__dict_Monoid_288) {
        return function (_412) {
            return function (_413) {
                if (_413 instanceof Data_Maybe.Nothing) {
                    return Data_Monoid.mempty(__dict_Monoid_288);
                };
                if (_413 instanceof Data_Maybe.Just) {
                    return _412(_413.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_409) {
        return function (_410) {
            return function (_411) {
                if (_411 instanceof Data_Maybe.Nothing) {
                    return _410;
                };
                if (_411 instanceof Data_Maybe.Just) {
                    return _409(_410)(_411.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_406) {
        return function (_407) {
            return function (_408) {
                if (_408 instanceof Data_Maybe.Nothing) {
                    return _407;
                };
                if (_408 instanceof Data_Maybe.Just) {
                    return _406(_408.value0)(_407);
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var foldableEither = new Foldable(function (__dict_Monoid_289) {
        return function (_404) {
            return function (_405) {
                if (_405 instanceof Data_Either.Left) {
                    return Data_Monoid.mempty(__dict_Monoid_289);
                };
                if (_405 instanceof Data_Either.Right) {
                    return _404(_405.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_401) {
        return function (_402) {
            return function (_403) {
                if (_403 instanceof Data_Either.Left) {
                    return _402;
                };
                if (_403 instanceof Data_Either.Right) {
                    return _401(_402)(_403.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_398) {
        return function (_399) {
            return function (_400) {
                if (_400 instanceof Data_Either.Left) {
                    return _399;
                };
                if (_400 instanceof Data_Either.Right) {
                    return _398(_400.value0)(_399);
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var foldableArray = new Foldable(function (__dict_Monoid_290) {
        return function (f) {
            return function (xs) {
                return foldr(foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<>"](__dict_Monoid_290["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(__dict_Monoid_290))(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldlArray(f)(z)(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldrArray(f)(z)(xs);
            };
        };
    });
    var foldMap = function (dict) {
        return dict.foldMap;
    };
    var any = function (__dict_Foldable_296) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(or(foldableArray))(foldMap(__dict_Foldable_296)(Data_Monoid.monoidArray)(function (x) {
                return [ p(x) ];
            }));
        };
    };
    var elem = function (__dict_Eq_297) {
        return function (__dict_Foldable_298) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(any(__dict_Foldable_298))(Prelude["=="](__dict_Eq_297));
        };
    };
    var notElem = function (__dict_Eq_299) {
        return function (__dict_Foldable_300) {
            return function (x) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.not(Prelude.boolLikeBoolean))(elem(__dict_Eq_299)(__dict_Foldable_300)(x));
            };
        };
    };
    return {
        Foldable: Foldable, 
        foldlArray: foldlArray, 
        foldrArray: foldrArray, 
        notElem: notElem, 
        elem: elem, 
        any: any, 
        or: or, 
        intercalate: intercalate, 
        mconcat: mconcat, 
        foldMap: foldMap, 
        foldl: foldl, 
        foldr: foldr, 
        foldableArray: foldableArray, 
        foldableEither: foldableEither, 
        foldableMaybe: foldableMaybe
    };
})();
var PS = PS || {};
PS.Data_String = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Data_Char = PS.Data_Char;
    var Data_String_Unsafe = PS.Data_String_Unsafe;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    
    function _charAt(i, s, Just, Nothing) {
      return i >= 0 && i < s.length ? Just(s.charAt(i)) : Nothing;
    }
    ;
    
    function length(s) {
      return s.length;
    }
    ;
    
    function replace(s1) {
      return function(s2) {
        return function(s3) {
          return s3.replace(s1, s2);
        };
      };
    }
    ;
    
    function take(n) {
      return function(s) {
        return s.substr(0, n);
      };
    }
    ;
    
    function drop(n) {
      return function(s) {
        return s.substr(n);
      };
    }
    ;
    
    function split(sep) {
      return function(s) {
        return s.split(sep);
      };
    }
    ;
    
    function trim(s) {
      return s.trim();
    }
    ;
    
    function joinWith(s) {
      return function(xs) {
        return xs.join(s);
      };
    }
    ;
    var charAt = function (n) {
        return function (s) {
            return _charAt(n, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    return {
        joinWith: joinWith, 
        trim: trim, 
        split: split, 
        drop: drop, 
        take: take, 
        replace: replace, 
        length: length, 
        charAt: charAt
    };
})();
var PS = PS || {};
PS.Data_String_Regex = (function () {
    "use strict";
    var Data_String = PS.Data_String;
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    
  function regex$prime(s1) {
    return function(s2) {
      return new RegExp(s1, s2);
    };
  }
  ;
    
  function test(r) {
    return function(s) {
      return r.test(s);
    };
  }
  ;
    
  function _match(r, s, Just, Nothing) {
    var m = s.match(r);
    return m == null ? Nothing : Just(m);
  }
  ;
    
  function replace(r) {
    return function(s1) {
      return function(s2) {
        return s2.replace(r, s1);
      };
    };
  }
  ;
    var renderFlags = function (flags) {
        return (function () {
            if (flags.global) {
                return "g";
            };
            if (!flags.global) {
                return "";
            };
            throw new Error("Failed pattern match");
        })() + ((function () {
            if (flags.ignoreCase) {
                return "i";
            };
            if (!flags.ignoreCase) {
                return "";
            };
            throw new Error("Failed pattern match");
        })() + ((function () {
            if (flags.multiline) {
                return "m";
            };
            if (!flags.multiline) {
                return "";
            };
            throw new Error("Failed pattern match");
        })() + ((function () {
            if (flags.sticky) {
                return "y";
            };
            if (!flags.sticky) {
                return "";
            };
            throw new Error("Failed pattern match");
        })() + (function () {
            if (flags.unicode) {
                return "u";
            };
            if (!flags.unicode) {
                return "";
            };
            throw new Error("Failed pattern match");
        })())));
    };
    var regex = function (source) {
        return function (flags) {
            return regex$prime(source)(renderFlags(flags));
        };
    };
    var match = function (r) {
        return function (s) {
            return _match(r, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    return {
        replace: replace, 
        match: match, 
        test: test, 
        renderFlags: renderFlags, 
        regex: regex
    };
})();
var PS = PS || {};
PS.Data_Foreign_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Array = PS.Data_Array;
    var Data_Foreign_Null = PS.Data_Foreign_Null;
    var Data_Foreign_Undefined = PS.Data_Foreign_Undefined;
    var Data_Foreign_NullOrUndefined = PS.Data_Foreign_NullOrUndefined;
    var Data_Either = PS.Data_Either;
    var Data_Foreign_Index = PS.Data_Foreign_Index;
    var IsForeign = function (read) {
        this.read = read;
    };
    var stringIsForeign = new IsForeign(Data_Foreign.readString);
    var read = function (dict) {
        return dict.read;
    };
    var readWith = function (__dict_IsForeign_322) {
        return function (f) {
            return function (value) {
                return Data_Either.either(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.Left.create)(f))(Data_Either.Right.create)(read(__dict_IsForeign_322)(value));
            };
        };
    };
    var readProp = function (__dict_IsForeign_323) {
        return function (__dict_Index_324) {
            return function (prop) {
                return function (value) {
                    return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Index["!"](__dict_Index_324)(value)(prop))(readWith(__dict_IsForeign_323)(Data_Foreign_Index.errorAt(__dict_Index_324)(prop)));
                };
            };
        };
    };
    return {
        IsForeign: IsForeign, 
        readProp: readProp, 
        readWith: readWith, 
        read: read, 
        stringIsForeign: stringIsForeign
    };
})();
var PS = PS || {};
PS.Control_Monad_Free = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Coyoneda = PS.Data_Coyoneda;
    var Data_Either = PS.Data_Either;
    var Data_Inject = PS.Data_Inject;
    var Data_Function = PS.Data_Function;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Pure = (function () {
        function Pure(value0) {
            this.value0 = value0;
        };
        Pure.create = function (value0) {
            return new Pure(value0);
        };
        return Pure;
    })();
    var Free = (function () {
        function Free(value0) {
            this.value0 = value0;
        };
        Free.create = function (value0) {
            return new Free(value0);
        };
        return Free;
    })();
    var Gosub = (function () {
        function Gosub(value0) {
            this.value0 = value0;
        };
        Gosub.create = function (value0) {
            return new Gosub(value0);
        };
        return Gosub;
    })();
    var monadFree = function (__dict_Functor_344) {
        return new Prelude.Monad(function () {
            return applicativeFree(__dict_Functor_344);
        }, function () {
            return bindFree(__dict_Functor_344);
        });
    };
    var functorFree = function (__dict_Functor_359) {
        return new Prelude.Functor(function (_455) {
            return function (_456) {
                if (_456 instanceof Pure) {
                    return new Pure(_455(_456.value0));
                };
                return Prelude.liftA1(applicativeFree(__dict_Functor_359))(_455)(_456);
            };
        });
    };
    var bindFree = function (__dict_Functor_360) {
        return new Prelude.Bind(function (_457) {
            return function (_458) {
                if (_457 instanceof Gosub) {
                    return new Gosub(function (h) {
                        return _457.value0(function (a) {
                            return function (i) {
                                return h(a)(function (x) {
                                    return new Gosub(function (j) {
                                        return j(Prelude["const"](i(x)))(_458);
                                    });
                                });
                            };
                        });
                    });
                };
                return new Gosub(function (h) {
                    return h(Prelude["const"](_457))(_458);
                });
            };
        }, function () {
            return applyFree(__dict_Functor_360);
        });
    };
    var applyFree = function (__dict_Functor_361) {
        return new Prelude.Apply(Prelude.ap(monadFree(__dict_Functor_361)), function () {
            return functorFree(__dict_Functor_361);
        });
    };
    var applicativeFree = function (__dict_Functor_362) {
        return new Prelude.Applicative(function () {
            return applyFree(__dict_Functor_362);
        }, Pure.create);
    };
    var resumeGosub = function (__dict_Functor_339) {
        return function (_452) {
            if (_452 instanceof Gosub) {
                return _452.value0(function (a) {
                    return function (g) {
                        var _786 = a(Prelude.unit);
                        if (_786 instanceof Pure) {
                            return new Data_Either.Right(g(_786.value0));
                        };
                        if (_786 instanceof Free) {
                            return new Data_Either.Left(Prelude["<$>"](__dict_Functor_339)(function (h) {
                                return Prelude[">>="](bindFree(__dict_Functor_339))(h)(g);
                            })(_786.value0));
                        };
                        if (_786 instanceof Gosub) {
                            return new Data_Either.Right(_786.value0(function (b) {
                                return function (i) {
                                    return Prelude[">>="](bindFree(__dict_Functor_339))(b(Prelude.unit))(function (x) {
                                        return Prelude[">>="](bindFree(__dict_Functor_339))(i(x))(g);
                                    });
                                };
                            }));
                        };
                        throw new Error("Failed pattern match");
                    };
                });
            };
            throw new Error("Failed pattern match");
        };
    };
    var resume = function (__copy___dict_Functor_340) {
        return function (__copy_f) {
            var __dict_Functor_340 = __copy___dict_Functor_340;
            var f = __copy_f;
            tco: while (true) {
                if (f instanceof Pure) {
                    return new Data_Either.Right(f.value0);
                };
                if (f instanceof Free) {
                    return new Data_Either.Left(f.value0);
                };
                var _794 = resumeGosub(__dict_Functor_340)(f);
                if (_794 instanceof Data_Either.Left) {
                    return new Data_Either.Left(_794.value0);
                };
                if (_794 instanceof Data_Either.Right) {
                    var __tco___dict_Functor_340 = __dict_Functor_340;
                    __dict_Functor_340 = __tco___dict_Functor_340;
                    f = _794.value0;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var go = function (__copy___dict_Functor_358) {
        return function (__copy_fn) {
            return function (__copy_f) {
                var __dict_Functor_358 = __copy___dict_Functor_358;
                var fn = __copy_fn;
                var f = __copy_f;
                tco: while (true) {
                    var _797 = resume(__dict_Functor_358)(f);
                    if (_797 instanceof Data_Either.Left) {
                        var __tco___dict_Functor_358 = __dict_Functor_358;
                        var __tco_fn = fn;
                        var __tco_f = fn(_797.value0);
                        __dict_Functor_358 = __tco___dict_Functor_358;
                        fn = __tco_fn;
                        f = __tco_f;
                        continue tco;
                    };
                    if (_797 instanceof Data_Either.Right) {
                        return _797.value0;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    return {
        Pure: Pure, 
        Free: Free, 
        Gosub: Gosub, 
        go: go, 
        functorFree: functorFree, 
        applyFree: applyFree, 
        applicativeFree: applicativeFree, 
        bindFree: bindFree, 
        monadFree: monadFree
    };
})();
var PS = PS || {};
PS.Control_Monad_Trampoline = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Lazy = PS.Data_Lazy;
    var Control_Monad_Free = PS.Control_Monad_Free;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Traversable = PS.Data_Traversable;
    var runTrampoline = Control_Monad_Free.go(Data_Lazy.functorLazy)(Data_Lazy.force);
    return {
        runTrampoline: runTrampoline
    };
})();
var PS = PS || {};
PS.Control_Monad_Rec_Class = (function () {
    "use strict";
    var Data_Identity = PS.Data_Identity;
    var Data_Function = PS.Data_Function;
    var Data_Either = PS.Data_Either;
    var Prelude = PS.Prelude;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_Error = PS.Control_Monad_Error;
    function tailRecEff(f, br, left, right, a) {  return function() {    var r = f(a)();    while (true) {      if (br(r)) {        var a1 = left(r);        r = f(a1)();      } else {        return right(r);      }    }  };};
    var MonadRec = function (__superclass_Prelude$dotMonad_0, tailRecM) {
        this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
        this.tailRecM = tailRecM;
    };
    var tailRecM = function (dict) {
        return dict.tailRecM;
    };
    var monadRecEff = new MonadRec(function () {
        return Control_Monad_Eff.monadEff;
    }, function (f) {
        return function (a) {
            var fromRight = function (_494) {
                if (_494 instanceof Data_Either.Right) {
                    return _494.value0;
                };
                throw new Error("Failed pattern match");
            };
            var fromLeft = function (_493) {
                if (_493 instanceof Data_Either.Left) {
                    return _493.value0;
                };
                throw new Error("Failed pattern match");
            };
            return tailRecEff(f, Data_Either.isLeft, fromLeft, fromRight, a);
        };
    });
    return {
        MonadRec: MonadRec, 
        tailRecM: tailRecM, 
        monadRecEff: monadRecEff
    };
})();
var PS = PS || {};
PS.Language_TypeScript_Lexer = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_String = PS.Data_String;
    var Control_Monad_Eff_Exception = PS.Control_Monad_Eff_Exception;
    var Data_String_Regex = PS.Data_String_Regex;
    var Data_Char = PS.Data_Char;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var Control_Monad_Rec_Class = PS.Control_Monad_Rec_Class;
    var Data_Foldable = PS.Data_Foldable;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_Array_ST = PS.Data_Array_ST;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    var Data_Function = PS.Data_Function;
    var Control_Monad_ST = PS.Control_Monad_ST;
    var Data_Array = PS.Data_Array;
    function parseString(s) {  return JSON.parse(s);};
    var LParen = (function () {
        function LParen() {

        };
        LParen.value = new LParen();
        return LParen;
    })();
    var RParen = (function () {
        function RParen() {

        };
        RParen.value = new RParen();
        return RParen;
    })();
    var LBrace = (function () {
        function LBrace() {

        };
        LBrace.value = new LBrace();
        return LBrace;
    })();
    var RBrace = (function () {
        function RBrace() {

        };
        RBrace.value = new RBrace();
        return RBrace;
    })();
    var LAngle = (function () {
        function LAngle() {

        };
        LAngle.value = new LAngle();
        return LAngle;
    })();
    var RAngle = (function () {
        function RAngle() {

        };
        RAngle.value = new RAngle();
        return RAngle;
    })();
    var LSquare = (function () {
        function LSquare() {

        };
        LSquare.value = new LSquare();
        return LSquare;
    })();
    var RSquare = (function () {
        function RSquare() {

        };
        RSquare.value = new RSquare();
        return RSquare;
    })();
    var Arrow = (function () {
        function Arrow() {

        };
        Arrow.value = new Arrow();
        return Arrow;
    })();
    var Colon = (function () {
        function Colon() {

        };
        Colon.value = new Colon();
        return Colon;
    })();
    var Equals = (function () {
        function Equals() {

        };
        Equals.value = new Equals();
        return Equals;
    })();
    var Dot = (function () {
        function Dot() {

        };
        Dot.value = new Dot();
        return Dot;
    })();
    var Comma = (function () {
        function Comma() {

        };
        Comma.value = new Comma();
        return Comma;
    })();
    var Semi = (function () {
        function Semi() {

        };
        Semi.value = new Semi();
        return Semi;
    })();
    var QuestionMark = (function () {
        function QuestionMark() {

        };
        QuestionMark.value = new QuestionMark();
        return QuestionMark;
    })();
    var Ellipsis = (function () {
        function Ellipsis() {

        };
        Ellipsis.value = new Ellipsis();
        return Ellipsis;
    })();
    var IdentOrKeyword = (function () {
        function IdentOrKeyword(value0) {
            this.value0 = value0;
        };
        IdentOrKeyword.create = function (value0) {
            return new IdentOrKeyword(value0);
        };
        return IdentOrKeyword;
    })();
    var Natural = (function () {
        function Natural(value0) {
            this.value0 = value0;
        };
        Natural.create = function (value0) {
            return new Natural(value0);
        };
        return Natural;
    })();
    var StringLiteral = (function () {
        function StringLiteral(value0) {
            this.value0 = value0;
        };
        StringLiteral.create = function (value0) {
            return new StringLiteral(value0);
        };
        return StringLiteral;
    })();
    var LineComment = (function () {
        function LineComment(value0) {
            this.value0 = value0;
        };
        LineComment.create = function (value0) {
            return new LineComment(value0);
        };
        return LineComment;
    })();
    var BlockComment = (function () {
        function BlockComment(value0) {
            this.value0 = value0;
        };
        BlockComment.create = function (value0) {
            return new BlockComment(value0);
        };
        return BlockComment;
    })();
    var showToken = new Prelude.Show(function (_539) {
        if (_539 instanceof LParen) {
            return "LParen";
        };
        if (_539 instanceof RParen) {
            return "RParen";
        };
        if (_539 instanceof LBrace) {
            return "LBrace";
        };
        if (_539 instanceof RBrace) {
            return "RBrace";
        };
        if (_539 instanceof LAngle) {
            return "LAngle";
        };
        if (_539 instanceof RAngle) {
            return "RAngle";
        };
        if (_539 instanceof LSquare) {
            return "LSquare";
        };
        if (_539 instanceof RSquare) {
            return "RSquare";
        };
        if (_539 instanceof Arrow) {
            return "Arrow";
        };
        if (_539 instanceof Colon) {
            return "Colon";
        };
        if (_539 instanceof Equals) {
            return "Equals";
        };
        if (_539 instanceof Dot) {
            return "Dot";
        };
        if (_539 instanceof Comma) {
            return "Comma";
        };
        if (_539 instanceof Semi) {
            return "Semi";
        };
        if (_539 instanceof QuestionMark) {
            return "QuestionMark";
        };
        if (_539 instanceof Ellipsis) {
            return "Ellipsis";
        };
        if (_539 instanceof IdentOrKeyword) {
            return "(IdentOrKeyword " + (Prelude.show(Prelude.showString)(_539.value0) + ")");
        };
        if (_539 instanceof Natural) {
            return "(Natural " + (Prelude.show(Prelude.showNumber)(_539.value0) + ")");
        };
        if (_539 instanceof StringLiteral) {
            return "(StringLiteral " + (Prelude.show(Prelude.showString)(_539.value0) + ")");
        };
        if (_539 instanceof LineComment) {
            return "(LineComment " + (Prelude.show(Prelude.showString)(_539.value0) + ")");
        };
        if (_539 instanceof BlockComment) {
            return "(BlockComment " + (Prelude.show(Prelude.showString)(_539.value0) + ")");
        };
        throw new Error("Failed pattern match");
    });
    var lex = function (s) {
        var toDigit = function (_542) {
            if (_542 === "0") {
                return new Data_Maybe.Just(0);
            };
            if (_542 === "1") {
                return new Data_Maybe.Just(1);
            };
            if (_542 === "2") {
                return new Data_Maybe.Just(2);
            };
            if (_542 === "3") {
                return new Data_Maybe.Just(3);
            };
            if (_542 === "4") {
                return new Data_Maybe.Just(4);
            };
            if (_542 === "5") {
                return new Data_Maybe.Just(5);
            };
            if (_542 === "6") {
                return new Data_Maybe.Just(6);
            };
            if (_542 === "7") {
                return new Data_Maybe.Just(7);
            };
            if (_542 === "8") {
                return new Data_Maybe.Just(8);
            };
            if (_542 === "9") {
                return new Data_Maybe.Just(9);
            };
            return Data_Maybe.Nothing.value;
        };
        var strAt = function (i) {
            return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Char.charString)(Data_String.charAt(i)(s));
        };
        var removeComments = function (ts) {
            return (Data_Foldable.foldl(Data_Foldable.foldableArray)(function (st) {
                return function (t) {
                    if (t.token instanceof LineComment) {
                        return {
                            comments: Prelude["<>"](Data_Array.semigroupArray)(st.comments)([ t.token.value0 ]), 
                            tokens: st.tokens
                        };
                    };
                    if (t.token instanceof BlockComment) {
                        return {
                            comments: Prelude["<>"](Data_Array.semigroupArray)(st.comments)([ t.token.value0 ]), 
                            tokens: st.tokens
                        };
                    };
                    return {
                        comments: [  ], 
                        tokens: Prelude["<>"](Data_Array.semigroupArray)(st.tokens)([ (function () {
                            var _814 = {};
                            for (var _815 in t) {
                                if (t.hasOwnProperty(_815)) {
                                    _814[_815] = t[_815];
                                };
                            };
                            _814.comments = st.comments;
                            return _814;
                        })() ])
                    };
                };
            })({
                comments: [  ], 
                tokens: [  ]
            })(ts)).tokens;
        };
        var isWhitespace = function (_543) {
            if (_543 instanceof Data_Maybe.Just) {
                var _817 = Data_Char.charString(_543.value0);
                if (_817 === " ") {
                    return true;
                };
                if (_817 === "\r") {
                    return true;
                };
                if (_817 === "\n") {
                    return true;
                };
                if (_817 === "\t") {
                    return true;
                };
                return false;
            };
            if (_543 instanceof Data_Maybe.Nothing) {
                return false;
            };
            throw new Error("Failed pattern match");
        };
        var isUpper = function (c) {
            return Prelude[">="](Prelude.ordString)(c)("A") && Prelude["<="](Prelude.ordString)(c)("Z");
        };
        var isNumeric = function (c) {
            return Prelude[">="](Prelude.ordString)(c)("0") && Prelude["<="](Prelude.ordString)(c)("9");
        };
        var isNewLine = function (_544) {
            if (_544 instanceof Data_Maybe.Just) {
                return Data_Char.charString(_544.value0) === "\n";
            };
            if (_544 instanceof Data_Maybe.Nothing) {
                return false;
            };
            throw new Error("Failed pattern match");
        };
        var isLower = function (c) {
            return Prelude[">="](Prelude.ordString)(c)("a") && Prelude["<="](Prelude.ordString)(c)("z");
        };
        var isIdentStart = function (c) {
            return isLower(c) || (isUpper(c) || (c === "_" || c === "$"));
        };
        var isIdentChar = function (c) {
            return isIdentStart(c) || isNumeric(c);
        };
        var isAlpha = function (c) {
            return isLower(c) || isUpper(c);
        };
        var isAlphaNum = function (c) {
            return isAlpha(c) || isNumeric(c);
        };
        var build = function (ts) {
            var go = function (_545) {
                if (_545.index >= Data_String.length(s)) {
                    return Prelude["return"](Control_Monad_Eff.monadEff)(new Data_Either.Right(Prelude.unit));
                };
                if (isNewLine(Data_String.charAt(_545.index)(s))) {
                    return Prelude["return"](Control_Monad_Eff.monadEff)(new Data_Either.Left({
                        index: _545.index + 1, 
                        line: _545.line + 1, 
                        column: 1
                    }));
                };
                if (isWhitespace(Data_String.charAt(_545.index)(s))) {
                    return Prelude["return"](Control_Monad_Eff.monadEff)(new Data_Either.Left({
                        index: _545.index + 1, 
                        line: _545.line, 
                        column: _545.column + 1
                    }));
                };
                if (Prelude.otherwise) {
                    var stringLiteralRegex = (function () {
                        var flags = {
                            unicode: false, 
                            sticky: false, 
                            multiline: false, 
                            ignoreCase: false, 
                            global: false
                        };
                        return Data_String_Regex.regex("^\"(?:\\\\.|[^\"])*\"")(flags);
                    })();
                    var numericLiteralRegex = (function () {
                        var flags = {
                            unicode: false, 
                            sticky: false, 
                            multiline: false, 
                            ignoreCase: false, 
                            global: false
                        };
                        return Data_String_Regex.regex("^-?[0-9]+")(flags);
                    })();
                    var isStringLiteral = function (i_1) {
                        return Data_String_Regex.test(stringLiteralRegex)(Data_String.drop(i_1)(s));
                    };
                    var isNumericLiteral = function (i_1) {
                        return Data_String_Regex.test(numericLiteralRegex)(Data_String.drop(i_1)(s));
                    };
                    var emitThen$prime = function (tok) {
                        return function (next) {
                            return function (line) {
                                return function (col) {
                                    return function __do() {
                                        Data_Array_ST.pushSTArray(ts)({
                                            token: tok, 
                                            line: line, 
                                            column: col, 
                                            comments: [  ]
                                        })();
                                        return new Data_Either.Left({
                                            index: next, 
                                            line: _545.line, 
                                            column: col
                                        });
                                    };
                                };
                            };
                        };
                    };
                    var readBlockComment = function (i_1) {
                        return function (l_1) {
                            return function (c_1) {
                                var two = function (x) {
                                    return function (y) {
                                        return [ x, y ];
                                    };
                                };
                                var blockComment = function (l_2) {
                                    return function (c_2) {
                                        return function (len) {
                                            return emitThen$prime(new BlockComment(Data_String.take(len)(Data_String.drop(i_1)(s))))(i_1 + len + 2)(l_2)(c_2 + 2);
                                        };
                                    };
                                };
                                var collect = function (__copy_len) {
                                    return function (__copy_l_2) {
                                        return function (__copy_c_2) {
                                            var len = __copy_len;
                                            var l_2 = __copy_l_2;
                                            var c_2 = __copy_c_2;
                                            tco: while (true) {
                                                var _822 = Prelude["<*>"](Data_Maybe.applyMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)(two)(strAt(i_1 + len)))(strAt(i_1 + len + 1));
                                                if (_822 instanceof Data_Maybe.Just && (_822.value0.length === 2 && (_822.value0[0] === "*" && _822.value0[1] === "/"))) {
                                                    return blockComment(l_2)(c_2)(len);
                                                };
                                                if (_822 instanceof Data_Maybe.Just && (_822.value0.length === 2 && _822.value0[0] === "\n")) {
                                                    var __tco_len = len + 1;
                                                    var __tco_l_2 = l_2 + 1;
                                                    len = __tco_len;
                                                    l_2 = __tco_l_2;
                                                    c_2 = 1;
                                                    continue tco;
                                                };
                                                if (_822 instanceof Data_Maybe.Just) {
                                                    var __tco_len = len + 1;
                                                    var __tco_l_2 = l_2;
                                                    var __tco_c_2 = c_2 + 1;
                                                    len = __tco_len;
                                                    l_2 = __tco_l_2;
                                                    c_2 = __tco_c_2;
                                                    continue tco;
                                                };
                                                if (_822 instanceof Data_Maybe.Nothing) {
                                                    return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("Unterminated block comment"));
                                                };
                                                throw new Error("Failed pattern match");
                                            };
                                        };
                                    };
                                };
                                return collect(0)(l_1)(c_1);
                            };
                        };
                    };
                    var readLineComment = function (i_1) {
                        var lineComment = function (i_2) {
                            return function (len) {
                                return emitThen$prime(new LineComment(Data_String.take(len)(Data_String.drop(i_2)(s))))(i_2 + len + 1)(1)(_545.line + 1);
                            };
                        };
                        var collect = function (__copy_len) {
                            var len = __copy_len;
                            tco: while (true) {
                                var _830 = strAt(i_1 + len);
                                if (_830 instanceof Data_Maybe.Just && _830.value0 === "\r") {
                                    return lineComment(i_1)(len);
                                };
                                if (_830 instanceof Data_Maybe.Just && _830.value0 === "\n") {
                                    return lineComment(i_1)(len);
                                };
                                if (_830 instanceof Data_Maybe.Nothing) {
                                    return lineComment(i_1)(len);
                                };
                                var __tco_len = len + 1;
                                len = __tco_len;
                                continue tco;
                            };
                        };
                        return collect(0);
                    };
                    var emitThen = function (tok) {
                        return function (next) {
                            return function (col) {
                                return emitThen$prime(tok)(next)(_545.line)(col);
                            };
                        };
                    };
                    var readIdent = function (i_1) {
                        return function (col) {
                            var collect = function (__copy_j) {
                                return function (__copy_col_1) {
                                    return function (__copy_acc) {
                                        var j = __copy_j;
                                        var col_1 = __copy_col_1;
                                        var acc = __copy_acc;
                                        tco: while (true) {
                                            var _833 = strAt(j);
                                            if (_833 instanceof Data_Maybe.Just && isIdentChar(_833.value0)) {
                                                var __tco_j = j + 1;
                                                var __tco_col_1 = col_1 + 1;
                                                var __tco_acc = acc + _833.value0;
                                                j = __tco_j;
                                                col_1 = __tco_col_1;
                                                acc = __tco_acc;
                                                continue tco;
                                            };
                                            return emitThen(new IdentOrKeyword(acc))(j)(col_1);
                                        };
                                    };
                                };
                            };
                            return collect(i_1)(col)("");
                        };
                    };
                    var readNumericLiteral = function (i_1) {
                        return function (c_1) {
                            var _835 = Data_String_Regex.match(numericLiteralRegex)(Data_String.drop(i_1)(s));
                            if (_835 instanceof Data_Maybe.Just && _835.value0.length >= 1) {
                                var _838 = _835.value0.slice(1);
                                return emitThen(new Natural(parseString(_835.value0[0])))(i_1 + Data_String.length(_835.value0[0]))(c_1 + Data_String.length(_835.value0[0]));
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                    var readStringLiteral = function (i_1) {
                        return function (c_1) {
                            var _839 = Data_String_Regex.match(stringLiteralRegex)(Data_String.drop(i_1)(s));
                            if (_839 instanceof Data_Maybe.Just && _839.value0.length >= 1) {
                                var _842 = _839.value0.slice(1);
                                return emitThen(new StringLiteral(parseString(_839.value0[0])))(i_1 + Data_String.length(_839.value0[0]))(c_1 + Data_String.length(_839.value0[0]));
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                    var emit = function (tok) {
                        return emitThen(tok)(_545.index + 1)(_545.column + 1);
                    };
                    var _843 = Data_Char.charString(Data_Maybe_Unsafe.fromJust(Data_String.charAt(_545.index)(s)));
                    if (_843 === "(") {
                        return emit(LParen.value);
                    };
                    if (_843 === ")") {
                        return emit(RParen.value);
                    };
                    if (_843 === "{") {
                        return emit(LBrace.value);
                    };
                    if (_843 === "}") {
                        return emit(RBrace.value);
                    };
                    if (_843 === "<") {
                        return emit(LAngle.value);
                    };
                    if (_843 === ">") {
                        return emit(RAngle.value);
                    };
                    if (_843 === "[") {
                        return emit(LSquare.value);
                    };
                    if (_843 === "]") {
                        return emit(RSquare.value);
                    };
                    if (_843 === ":") {
                        return emit(Colon.value);
                    };
                    if (_843 === ",") {
                        return emit(Comma.value);
                    };
                    if (_843 === ";") {
                        return emit(Semi.value);
                    };
                    if (_843 === "?") {
                        return emit(QuestionMark.value);
                    };
                    if (_843 === ".") {
                        var _844 = Data_String.take(2)(Data_String.drop(_545.index + 1)(s));
                        if (_844 === "..") {
                            return emitThen(Ellipsis.value)(_545.index + 3)(_545.column + 3);
                        };
                        return emit(Dot.value);
                    };
                    if (_843 === "=") {
                        var _845 = Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Char.charString)(Data_String.charAt(_545.index + 1)(s));
                        if (_845 instanceof Data_Maybe.Just && _845.value0 === ">") {
                            return emitThen(Arrow.value)(_545.index + 2)(_545.column + 2);
                        };
                        return emit(Equals.value);
                    };
                    if (_843 === "/") {
                        var _847 = Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Char.charString)(Data_String.charAt(_545.index + 1)(s));
                        if (_847 instanceof Data_Maybe.Just && _847.value0 === "/") {
                            return readLineComment(_545.index + 2);
                        };
                        if (_847 instanceof Data_Maybe.Just && _847.value0 === "*") {
                            return readBlockComment(_545.index + 2)(_545.line)(_545.column);
                        };
                        return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("Expected comment at line " + (Prelude.show(Prelude.showNumber)(_545.line) + (", column " + Prelude.show(Prelude.showNumber)(_545.column)))));
                    };
                    if (isStringLiteral(_545.index)) {
                        return readStringLiteral(_545.index)(_545.column);
                    };
                    if (isNumericLiteral(_545.index)) {
                        return readNumericLiteral(_545.index)(_545.column);
                    };
                    if (isIdentStart(_843)) {
                        return readIdent(_545.index)(_545.column);
                    };
                    if (Prelude.otherwise) {
                        return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("Unexpected character " + (Prelude.show(Prelude.showString)(_843) + (" at line " + (Prelude.show(Prelude.showNumber)(_545.line) + (", column " + Prelude.show(Prelude.showNumber)(_545.column)))))));
                    };
                    throw new Error("Failed pattern match");
                };
                throw new Error("Failed pattern match");
            };
            return Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEff)(go)({
                index: 0, 
                line: 1, 
                column: 1
            });
        };
        return Control_Monad_Eff.runPure(Control_Monad_Eff_Exception.catchException(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["return"](Control_Monad_Eff.monadEff))(Data_Either.Left.create))(Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.Right.create)(removeComments))(Data_Array_ST.runSTArray(function __do() {
            var _33 = Data_Array_ST.emptySTArray();
            build(_33)();
            return _33;
        }))));
    };
    var eqToken = new Prelude.Eq(function (t1) {
        return function (t2) {
            return !Prelude["=="](eqToken)(t1)(t2);
        };
    }, function (_540) {
        return function (_541) {
            if (_540 instanceof LParen && _541 instanceof LParen) {
                return true;
            };
            if (_540 instanceof RParen && _541 instanceof RParen) {
                return true;
            };
            if (_540 instanceof LBrace && _541 instanceof LBrace) {
                return true;
            };
            if (_540 instanceof RBrace && _541 instanceof RBrace) {
                return true;
            };
            if (_540 instanceof LAngle && _541 instanceof LAngle) {
                return true;
            };
            if (_540 instanceof RAngle && _541 instanceof RAngle) {
                return true;
            };
            if (_540 instanceof LSquare && _541 instanceof LSquare) {
                return true;
            };
            if (_540 instanceof RSquare && _541 instanceof RSquare) {
                return true;
            };
            if (_540 instanceof Arrow && _541 instanceof Arrow) {
                return true;
            };
            if (_540 instanceof Colon && _541 instanceof Colon) {
                return true;
            };
            if (_540 instanceof Equals && _541 instanceof Equals) {
                return true;
            };
            if (_540 instanceof Dot && _541 instanceof Dot) {
                return true;
            };
            if (_540 instanceof Comma && _541 instanceof Comma) {
                return true;
            };
            if (_540 instanceof Semi && _541 instanceof Semi) {
                return true;
            };
            if (_540 instanceof QuestionMark && _541 instanceof QuestionMark) {
                return true;
            };
            if (_540 instanceof Ellipsis && _541 instanceof Ellipsis) {
                return true;
            };
            if (_540 instanceof IdentOrKeyword && _541 instanceof IdentOrKeyword) {
                return _540.value0 === _541.value0;
            };
            if (_540 instanceof Natural && _541 instanceof Natural) {
                return _540.value0 === _541.value0;
            };
            if (_540 instanceof StringLiteral && _541 instanceof StringLiteral) {
                return _540.value0 === _541.value0;
            };
            if (_540 instanceof LineComment && _541 instanceof LineComment) {
                return _540.value0 === _541.value0;
            };
            if (_540 instanceof BlockComment && _541 instanceof BlockComment) {
                return _540.value0 === _541.value0;
            };
            return false;
        };
    });
    return {
        LParen: LParen, 
        RParen: RParen, 
        LBrace: LBrace, 
        RBrace: RBrace, 
        LAngle: LAngle, 
        RAngle: RAngle, 
        LSquare: LSquare, 
        RSquare: RSquare, 
        Arrow: Arrow, 
        Colon: Colon, 
        Equals: Equals, 
        Dot: Dot, 
        Comma: Comma, 
        Semi: Semi, 
        QuestionMark: QuestionMark, 
        Ellipsis: Ellipsis, 
        IdentOrKeyword: IdentOrKeyword, 
        Natural: Natural, 
        StringLiteral: StringLiteral, 
        LineComment: LineComment, 
        BlockComment: BlockComment, 
        lex: lex, 
        parseString: parseString, 
        showToken: showToken, 
        eqToken: eqToken
    };
})();
var PS = PS || {};
PS.Language_TypeScript_Types = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Either = PS.Data_Either;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Map = PS.Data_Map;
    var Data_Array = PS.Data_Array;
    var String = (function () {
        function String() {

        };
        String.value = new String();
        return String;
    })();
    var Number = (function () {
        function Number() {

        };
        Number.value = new Number();
        return Number;
    })();
    var Static = (function () {
        function Static() {

        };
        Static.value = new Static();
        return Static;
    })();
    var Public = (function () {
        function Public() {

        };
        Public.value = new Public();
        return Public;
    })();
    var Private = (function () {
        function Private() {

        };
        Private.value = new Private();
        return Private;
    })();
    var AnyType = (function () {
        function AnyType() {

        };
        AnyType.value = new AnyType();
        return AnyType;
    })();
    var NumberType = (function () {
        function NumberType() {

        };
        NumberType.value = new NumberType();
        return NumberType;
    })();
    var BooleanType = (function () {
        function BooleanType() {

        };
        BooleanType.value = new BooleanType();
        return BooleanType;
    })();
    var StringType = (function () {
        function StringType() {

        };
        StringType.value = new StringType();
        return StringType;
    })();
    var VoidType = (function () {
        function VoidType() {

        };
        VoidType.value = new VoidType();
        return VoidType;
    })();
    var Optional = (function () {
        function Optional() {

        };
        Optional.value = new Optional();
        return Optional;
    })();
    var ModuleName = (function () {
        function ModuleName(value0) {
            this.value0 = value0;
        };
        ModuleName.create = function (value0) {
            return new ModuleName(value0);
        };
        return ModuleName;
    })();
    var TypeName = (function () {
        function TypeName(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        TypeName.create = function (value0) {
            return function (value1) {
                return new TypeName(value0, value1);
            };
        };
        return TypeName;
    })();
    var Exported = (function () {
        function Exported() {

        };
        Exported.value = new Exported();
        return Exported;
    })();
    var EntityName = (function () {
        function EntityName(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        EntityName.create = function (value0) {
            return function (value1) {
                return new EntityName(value0, value1);
            };
        };
        return EntityName;
    })();
    var Comment = function (x) {
        return x;
    };
    var TypeBody = (function () {
        function TypeBody(value0) {
            this.value0 = value0;
        };
        TypeBody.create = function (value0) {
            return new TypeBody(value0);
        };
        return TypeBody;
    })();
    var PropertySignature = (function () {
        function PropertySignature(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        PropertySignature.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new PropertySignature(value0, value1, value2);
                };
            };
        };
        return PropertySignature;
    })();
    var CallSignature = (function () {
        function CallSignature(value0) {
            this.value0 = value0;
        };
        CallSignature.create = function (value0) {
            return new CallSignature(value0);
        };
        return CallSignature;
    })();
    var ConstructSignature = (function () {
        function ConstructSignature(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        ConstructSignature.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new ConstructSignature(value0, value1, value2);
                };
            };
        };
        return ConstructSignature;
    })();
    var TypeIndexSignature = (function () {
        function TypeIndexSignature(value0) {
            this.value0 = value0;
        };
        TypeIndexSignature.create = function (value0) {
            return new TypeIndexSignature(value0);
        };
        return TypeIndexSignature;
    })();
    var MethodSignature = (function () {
        function MethodSignature(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        MethodSignature.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new MethodSignature(value0, value1, value2);
                };
            };
        };
        return MethodSignature;
    })();
    var Predefined = (function () {
        function Predefined(value0) {
            this.value0 = value0;
        };
        Predefined.create = function (value0) {
            return new Predefined(value0);
        };
        return Predefined;
    })();
    var TypeReference = (function () {
        function TypeReference(value0) {
            this.value0 = value0;
        };
        TypeReference.create = function (value0) {
            return new TypeReference(value0);
        };
        return TypeReference;
    })();
    var ObjectType = (function () {
        function ObjectType(value0) {
            this.value0 = value0;
        };
        ObjectType.create = function (value0) {
            return new ObjectType(value0);
        };
        return ObjectType;
    })();
    var ArrayType = (function () {
        function ArrayType(value0) {
            this.value0 = value0;
        };
        ArrayType.create = function (value0) {
            return new ArrayType(value0);
        };
        return ArrayType;
    })();
    var FunctionType = (function () {
        function FunctionType(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        FunctionType.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new FunctionType(value0, value1, value2);
                };
            };
        };
        return FunctionType;
    })();
    var ConstructorType = (function () {
        function ConstructorType(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        ConstructorType.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new ConstructorType(value0, value1, value2);
                };
            };
        };
        return ConstructorType;
    })();
    var TypeRef = (function () {
        function TypeRef(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        TypeRef.create = function (value0) {
            return function (value1) {
                return new TypeRef(value0, value1);
            };
        };
        return TypeRef;
    })();
    var TypeParameter = (function () {
        function TypeParameter(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        TypeParameter.create = function (value0) {
            return function (value1) {
                return new TypeParameter(value0, value1);
            };
        };
        return TypeParameter;
    })();
    var RequiredOrOptionalParameter = (function () {
        function RequiredOrOptionalParameter(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        };
        RequiredOrOptionalParameter.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return new RequiredOrOptionalParameter(value0, value1, value2, value3);
                    };
                };
            };
        };
        return RequiredOrOptionalParameter;
    })();
    var RestParameter = (function () {
        function RestParameter(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        RestParameter.create = function (value0) {
            return function (value1) {
                return new RestParameter(value0, value1);
            };
        };
        return RestParameter;
    })();
    var ParameterListAndReturnType = (function () {
        function ParameterListAndReturnType(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        ParameterListAndReturnType.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new ParameterListAndReturnType(value0, value1, value2);
                };
            };
        };
        return ParameterListAndReturnType;
    })();
    var IndexSignature = (function () {
        function IndexSignature(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        IndexSignature.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new IndexSignature(value0, value1, value2);
                };
            };
        };
        return IndexSignature;
    })();
    var Interface = (function () {
        function Interface(value0, value1, value2, value3, value4) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
        };
        Interface.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return function (value4) {
                            return new Interface(value0, value1, value2, value3, value4);
                        };
                    };
                };
            };
        };
        return Interface;
    })();
    var AmbientConstructorDeclaration = (function () {
        function AmbientConstructorDeclaration(value0) {
            this.value0 = value0;
        };
        AmbientConstructorDeclaration.create = function (value0) {
            return new AmbientConstructorDeclaration(value0);
        };
        return AmbientConstructorDeclaration;
    })();
    var AmbientMemberDeclaration = (function () {
        function AmbientMemberDeclaration(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        };
        AmbientMemberDeclaration.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return new AmbientMemberDeclaration(value0, value1, value2, value3);
                    };
                };
            };
        };
        return AmbientMemberDeclaration;
    })();
    var AmbientIndexSignature = (function () {
        function AmbientIndexSignature(value0) {
            this.value0 = value0;
        };
        AmbientIndexSignature.create = function (value0) {
            return new AmbientIndexSignature(value0);
        };
        return AmbientIndexSignature;
    })();
    var AmbientVariableDeclaration = (function () {
        function AmbientVariableDeclaration(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        AmbientVariableDeclaration.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new AmbientVariableDeclaration(value0, value1, value2);
                };
            };
        };
        return AmbientVariableDeclaration;
    })();
    var AmbientFunctionDeclaration = (function () {
        function AmbientFunctionDeclaration(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        AmbientFunctionDeclaration.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new AmbientFunctionDeclaration(value0, value1, value2);
                };
            };
        };
        return AmbientFunctionDeclaration;
    })();
    var AmbientClassDeclaration = (function () {
        function AmbientClassDeclaration(value0, value1, value2, value3, value4, value5) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
        };
        AmbientClassDeclaration.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return function (value4) {
                            return function (value5) {
                                return new AmbientClassDeclaration(value0, value1, value2, value3, value4, value5);
                            };
                        };
                    };
                };
            };
        };
        return AmbientClassDeclaration;
    })();
    var AmbientInterfaceDeclaration = (function () {
        function AmbientInterfaceDeclaration(value0) {
            this.value0 = value0;
        };
        AmbientInterfaceDeclaration.create = function (value0) {
            return new AmbientInterfaceDeclaration(value0);
        };
        return AmbientInterfaceDeclaration;
    })();
    var AmbientEnumDeclaration = (function () {
        function AmbientEnumDeclaration(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        AmbientEnumDeclaration.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new AmbientEnumDeclaration(value0, value1, value2);
                };
            };
        };
        return AmbientEnumDeclaration;
    })();
    var AmbientModuleDeclaration = (function () {
        function AmbientModuleDeclaration(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        AmbientModuleDeclaration.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new AmbientModuleDeclaration(value0, value1, value2);
                };
            };
        };
        return AmbientModuleDeclaration;
    })();
    var AmbientExternalModuleDeclaration = (function () {
        function AmbientExternalModuleDeclaration(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        AmbientExternalModuleDeclaration.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new AmbientExternalModuleDeclaration(value0, value1, value2);
                };
            };
        };
        return AmbientExternalModuleDeclaration;
    })();
    var AmbientModuleElement = (function () {
        function AmbientModuleElement(value0) {
            this.value0 = value0;
        };
        AmbientModuleElement.create = function (value0) {
            return new AmbientModuleElement(value0);
        };
        return AmbientModuleElement;
    })();
    var ExportAssignment = (function () {
        function ExportAssignment(value0) {
            this.value0 = value0;
        };
        ExportAssignment.create = function (value0) {
            return new ExportAssignment(value0);
        };
        return ExportAssignment;
    })();
    var AmbientModuleExternalImportDeclaration = (function () {
        function AmbientModuleExternalImportDeclaration(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        AmbientModuleExternalImportDeclaration.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new AmbientModuleExternalImportDeclaration(value0, value1, value2);
                };
            };
        };
        return AmbientModuleExternalImportDeclaration;
    })();
    var InterfaceDeclaration = (function () {
        function InterfaceDeclaration(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        InterfaceDeclaration.create = function (value0) {
            return function (value1) {
                return new InterfaceDeclaration(value0, value1);
            };
        };
        return InterfaceDeclaration;
    })();
    var ImportDeclaration = (function () {
        function ImportDeclaration(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        ImportDeclaration.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new ImportDeclaration(value0, value1, value2);
                };
            };
        };
        return ImportDeclaration;
    })();
    var ExportDeclaration = (function () {
        function ExportDeclaration(value0) {
            this.value0 = value0;
        };
        ExportDeclaration.create = function (value0) {
            return new ExportDeclaration(value0);
        };
        return ExportDeclaration;
    })();
    var ExternalImportDeclaration = (function () {
        function ExternalImportDeclaration(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        ExternalImportDeclaration.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new ExternalImportDeclaration(value0, value1, value2);
                };
            };
        };
        return ExternalImportDeclaration;
    })();
    var AmbientDeclaration = (function () {
        function AmbientDeclaration(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        AmbientDeclaration.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new AmbientDeclaration(value0, value1, value2);
                };
            };
        };
        return AmbientDeclaration;
    })();
    var semigroupComment = new Prelude.Semigroup(function (_546) {
        return function (_547) {
            return Prelude["<>"](Data_Array.semigroupArray)(_546)(_547);
        };
    });
    return {
        AnyType: AnyType, 
        NumberType: NumberType, 
        BooleanType: BooleanType, 
        StringType: StringType, 
        VoidType: VoidType, 
        ModuleName: ModuleName, 
        TypeName: TypeName, 
        Predefined: Predefined, 
        TypeReference: TypeReference, 
        ObjectType: ObjectType, 
        ArrayType: ArrayType, 
        FunctionType: FunctionType, 
        ConstructorType: ConstructorType, 
        TypeParameter: TypeParameter, 
        Public: Public, 
        Private: Private, 
        String: String, 
        Number: Number, 
        RequiredOrOptionalParameter: RequiredOrOptionalParameter, 
        RestParameter: RestParameter, 
        ParameterListAndReturnType: ParameterListAndReturnType, 
        IndexSignature: IndexSignature, 
        PropertySignature: PropertySignature, 
        CallSignature: CallSignature, 
        ConstructSignature: ConstructSignature, 
        TypeIndexSignature: TypeIndexSignature, 
        MethodSignature: MethodSignature, 
        TypeBody: TypeBody, 
        Optional: Optional, 
        Static: Static, 
        AmbientConstructorDeclaration: AmbientConstructorDeclaration, 
        AmbientMemberDeclaration: AmbientMemberDeclaration, 
        AmbientIndexSignature: AmbientIndexSignature, 
        TypeRef: TypeRef, 
        AmbientModuleElement: AmbientModuleElement, 
        ExportAssignment: ExportAssignment, 
        AmbientModuleExternalImportDeclaration: AmbientModuleExternalImportDeclaration, 
        AmbientVariableDeclaration: AmbientVariableDeclaration, 
        AmbientFunctionDeclaration: AmbientFunctionDeclaration, 
        AmbientClassDeclaration: AmbientClassDeclaration, 
        AmbientInterfaceDeclaration: AmbientInterfaceDeclaration, 
        AmbientEnumDeclaration: AmbientEnumDeclaration, 
        AmbientModuleDeclaration: AmbientModuleDeclaration, 
        AmbientExternalModuleDeclaration: AmbientExternalModuleDeclaration, 
        Interface: Interface, 
        EntityName: EntityName, 
        Exported: Exported, 
        InterfaceDeclaration: InterfaceDeclaration, 
        ImportDeclaration: ImportDeclaration, 
        ExportDeclaration: ExportDeclaration, 
        ExternalImportDeclaration: ExternalImportDeclaration, 
        AmbientDeclaration: AmbientDeclaration, 
        Comment: Comment, 
        semigroupComment: semigroupComment
    };
})();
var PS = PS || {};
PS.Language_TypeScript_Comments = (function () {
    "use strict";
    var Data_String_Regex = PS.Data_String_Regex;
    var Data_String = PS.Data_String;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Language_TypeScript_Types = PS.Language_TypeScript_Types;
    var getContent = (function () {
        var star = Data_String_Regex.regex("^(\\s)*[*](\\s)*")({
            unicode: false, 
            sticky: false, 
            multiline: false, 
            ignoreCase: false, 
            global: false
        });
        var lines = Data_String.split("\n");
        var dropStar = Data_String_Regex.replace(star)("");
        return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Array.map(dropStar))(lines);
    })();
    var parseComment = function (_571) {
        var space = Data_String_Regex.regex("^(\\s)*$")({
            unicode: false, 
            sticky: false, 
            multiline: false, 
            ignoreCase: false, 
            global: false
        });
        var isSpace = Data_String_Regex.test(space);
        var append = function (_576) {
            return function (_577) {
                if (_577.length === 0) {
                    return [ _576 ];
                };
                if (_577.length === 1) {
                    return [ _577[0] + (" " + _576) ];
                };
                if (_577.length >= 1) {
                    var _873 = _577.slice(1);
                    return Prelude[":"](_577[0])(append(_576)(_873));
                };
                throw new Error("Failed pattern match");
            };
        };
        var go = function (__copy__572) {
            return function (__copy__573) {
                return function (__copy__574) {
                    return function (__copy__575) {
                        var _572 = __copy__572;
                        var _573 = __copy__573;
                        var _574 = __copy__574;
                        var _575 = __copy__575;
                        tco: while (true) {
                            if (_575.length === 0) {
                                return {
                                    text: _572, 
                                    other: _573
                                };
                            };
                            if (_575.length >= 1) {
                                var _879 = _575.slice(1);
                                if (Data_String.take(1)(_575[0]) === "@") {
                                    var words = Data_String.split(" ")(Data_String.drop(1)(_575[0]));
                                    var value = Data_String.joinWith(" ")(Data_Array.drop(1)(words));
                                    var key = Data_Maybe.fromMaybe("")(Data_Array.head(words));
                                    var __tco__572 = _572;
                                    var __tco__573 = Prelude["++"](Data_Array.semigroupArray)(_573)([ new Data_Tuple.Tuple(key, Data_String.trim(value)) ]);
                                    _572 = __tco__572;
                                    _573 = __tco__573;
                                    _574 = true;
                                    _575 = _879;
                                    continue tco;
                                };
                                if (isSpace(_575[0])) {
                                    var __tco__572 = _572;
                                    var __tco__573 = _573;
                                    _572 = __tco__572;
                                    _573 = __tco__573;
                                    _574 = true;
                                    _575 = _879;
                                    continue tco;
                                };
                                if (_574) {
                                    var __tco__572 = Prelude["++"](Data_Array.semigroupArray)(_572)([ _575[0] ]);
                                    var __tco__573 = _573;
                                    _572 = __tco__572;
                                    _573 = __tco__573;
                                    _574 = false;
                                    _575 = _879;
                                    continue tco;
                                };
                                if (Prelude.otherwise) {
                                    var __tco__572 = append(_575[0])(_572);
                                    var __tco__573 = _573;
                                    _572 = __tco__572;
                                    _573 = __tco__573;
                                    _574 = false;
                                    _575 = _879;
                                    continue tco;
                                };
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
            };
        };
        return go([  ])([  ])(true)(Data_Array.concatMap(getContent)(_571));
    };
    return {
        parseComment: parseComment
    };
})();
var PS = PS || {};
PS.Node_FS_Sync = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_Date = PS.Data_Date;
    var Node_Buffer = PS.Node_Buffer;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_Eff_Exception = PS.Control_Monad_Eff_Exception;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Node_Encoding = PS.Node_Encoding;
    var Node_FS = PS.Node_FS;
    var Node_FS_Stats = PS.Node_FS_Stats;
    var Node_Path = PS.Node_Path;
    var fs = require('fs');;
    function mkEff(action) {  return action;};
    
    /**
     *  |
     *  Writes text to a file using the specified encoding.
     * 
     */
    var writeTextFile = function (encoding) {
        return function (file) {
            return function (text) {
                return mkEff(function (_) {
                    return fs.writeFileSync(file, text, {
                        encoding: Prelude.show(Node_Encoding.showEncoding)(encoding)
                    });
                });
            };
        };
    };
    
    /**
     *  |
     *  Reads the entire contents of a text file with the specified encoding.
     * 
     */
    var readTextFile = function (encoding) {
        return function (file) {
            return mkEff(function (_) {
                return fs.readFileSync(file, {
                    encoding: Prelude.show(Node_Encoding.showEncoding)(encoding)
                });
            });
        };
    };
    return {
        writeTextFile: writeTextFile, 
        readTextFile: readTextFile
    };
})();
var PS = PS || {};
PS.Language_TypeScript_Docs = (function () {
    "use strict";
    var Data_String = PS.Data_String;
    var Data_Array = PS.Data_Array;
    var Data_Foldable = PS.Data_Foldable;
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Language_TypeScript_Comments = PS.Language_TypeScript_Comments;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    var Data_Function = PS.Data_Function;
    var Control_Alt = PS.Control_Alt;
    var Language_TypeScript_Types = PS.Language_TypeScript_Types;
    var Text = (function () {
        function Text(value0) {
            this.value0 = value0;
        };
        Text.create = function (value0) {
            return new Text(value0);
        };
        return Text;
    })();
    var Element = (function () {
        function Element(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        Element.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new Element(value0, value1, value2);
                };
            };
        };
        return Element;
    })();
    var text = function (s) {
        return [ new Text(s) ];
    };
    var surround = function (open) {
        return function (close) {
            return function (inside) {
                return Prelude["++"](Data_Array.semigroupArray)(open)(Prelude["++"](Data_Array.semigroupArray)(inside)(close));
            };
        };
    };
    
    /**
     *  Simple elements
     */
    var sp = text(" ");
    var rel = Data_Tuple.Tuple.create("rel");
    var name = Data_Tuple.Tuple.create("name");
    var $bang = function (f) {
        return function (attr) {
            var add = function (_633) {
                return function (_634) {
                    if (_634.length === 0) {
                        return [  ];
                    };
                    if (_634.length >= 1) {
                        var _886 = _634.slice(1);
                        if (_634[0] instanceof Element) {
                            return Prelude[":"](new Element((_634[0]).value0, Prelude["++"](Data_Array.semigroupArray)((_634[0]).value1)([ _633 ]), (_634[0]).value2))(_886);
                        };
                    };
                    if (_634.length >= 1) {
                        var _888 = _634.slice(1);
                        return _634;
                    };
                    throw new Error("Failed pattern match");
                };
            };
            return Prelude["<<<"](Prelude.semigroupoidArr)(add(attr))(f);
        };
    };
    
    /**
     *  Render document
     */
    var ifM = function (_629) {
        return function (_630) {
            if (!_629) {
                return Data_Monoid.mempty(Data_Monoid.monoidArray);
            };
            if (_629) {
                return _630;
            };
            throw new Error("Failed pattern match");
        };
    };
    var href = Data_Tuple.Tuple.create("href");
    var foldl1 = function (_597) {
        return function (_598) {
            if (_598.length >= 1) {
                var _894 = _598.slice(1);
                return Data_Foldable.foldl(Data_Foldable.foldableArray)(_597)(_598[0])(_894);
            };
            throw new Error("Failed pattern match");
        };
    };
    var escape = Prelude[">>>"](Prelude.semigroupoidArr)(Data_String.replace("&")("&amp;"))(Prelude[">>>"](Prelude.semigroupoidArr)(Data_String.replace("\"")("&quot;"))(Prelude[">>>"](Prelude.semigroupoidArr)(Data_String.replace("'")("&#39;"))(Prelude[">>>"](Prelude.semigroupoidArr)(Data_String.replace("<")("&lt;"))(Data_String.replace(">")("&gt;")))));
    var htmlToString = (function () {
        var attrToString = function (_632) {
            return _632.value0 + ("=\"" + (escape(_632.value1) + "\""));
        };
        var contentToString = function (_631) {
            if (_631 instanceof Text) {
                return escape(_631.value0);
            };
            if (_631 instanceof Element) {
                return "<" + (Data_String.joinWith(" ")(Prelude[":"](_631.value0)(Data_Array.map(attrToString)(_631.value1))) + (">" + (htmlToString(_631.value2) + ("</" + (_631.value0 + ">")))));
            };
            throw new Error("Failed pattern match");
        };
        return Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(contentToString);
    })();
    var element = function (name_1) {
        return function (children) {
            return [ new Element(name_1, [  ], children) ];
        };
    };
    var head = element("head");
    var header = function (_596) {
        if (_596 === 1) {
            return element("h1");
        };
        if (_596 === 2) {
            return element("h2");
        };
        if (_596 === 3) {
            return element("h3");
        };
        if (_596 === 4) {
            return element("h4");
        };
        if (_596 === 5) {
            return element("h5");
        };
        return element("h6");
    };
    
    /**
     *  Elements
     */
    var html = element("html");
    var li = element("li");
    var link = element("link");
    var p = element("p");
    var span = element("span");
    var strong = element("strong");
    var ul = element("ul");
    var div = element("div");
    var comparing = function (__dict_Ord_526) {
        return function (f) {
            return Data_Function.on(Prelude.compare(__dict_Ord_526))(f);
        };
    };
    var code = element("code");
    
    /**
     *  Bookmarks  
     */
    var bookmarkName = Data_String.joinWith("-");
    var body = element("body");
    
    /**
     *  Interfaces
     */
    var topLevelInterfaces = (function () {
        var toInterface = function (_636) {
            if (_636 instanceof Language_TypeScript_Types.InterfaceDeclaration) {
                return new Data_Maybe.Just(new Data_Tuple.Tuple(_636.value0, new Language_TypeScript_Types.Interface(_636.value1.value0, _636.value1.value1, _636.value1.value2, _636.value1.value3, _636.value1.value4)));
            };
            return Data_Maybe.Nothing.value;
        };
        var collectComments = foldl1(function (_592) {
            return function (_591) {
                return new Data_Tuple.Tuple(Control_Alt["<|>"](Data_Maybe.altMaybe)(_592.value0)(_591.value0), new Language_TypeScript_Types.Interface(Prelude["<>"](Data_Maybe.semigroupMaybe(Language_TypeScript_Types.semigroupComment))(_592.value1.value0)(_591.value1.value0), _592.value1.value1, _592.value1.value2, _592.value1.value3, new Language_TypeScript_Types.TypeBody(Prelude["<>"](Data_Array.semigroupArray)(_592.value1.value4.value0)(_591.value1.value4.value0))));
            };
        });
        return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Array.sortBy(comparing(Prelude.ordString)(function (_593) {
            return _593.value1.value1;
        })))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Array.map(collectComments))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Array.groupBy(Data_Function.on(Prelude["=="](Prelude.eqString))(function (_594) {
            return _594.value1.value1;
        })))(Data_Array.mapMaybe(toInterface))));
    })();
    
    /**
     *  Variables
     */
    var ambientVariableDeclarations = (function () {
        var p_1 = function (_639) {
            if (_639.amb instanceof Language_TypeScript_Types.AmbientVariableDeclaration) {
                return new Data_Maybe.Just({
                    exp: _639.exp, 
                    name: _639.amb.value1, 
                    ty: _639.amb.value2, 
                    comments: Prelude["<*>"](Data_Maybe.applyMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["<>"](Language_TypeScript_Types.semigroupComment))(_639.amb.value0))(_639.comments)
                });
            };
            return Data_Maybe.Nothing.value;
        };
        return Data_Array.mapMaybe(p_1);
    })();
    
    /**
     *  Functions
     */
    var ambientFunctionDeclarations = (function () {
        var p_1 = function (_640) {
            if (_640.amb instanceof Language_TypeScript_Types.AmbientFunctionDeclaration) {
                return new Data_Maybe.Just({
                    exp: _640.exp, 
                    name: _640.amb.value1, 
                    plrt: _640.amb.value2, 
                    comments: Prelude["<*>"](Data_Maybe.applyMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["<>"](Language_TypeScript_Types.semigroupComment))(_640.amb.value0))(_640.comments)
                });
            };
            return Data_Maybe.Nothing.value;
        };
        return Data_Array.mapMaybe(p_1);
    })();
    
    /**
     *  Enums
     */
    var ambientEnumDeclarations = (function () {
        var p_1 = function (_643) {
            if (_643.amb instanceof Language_TypeScript_Types.AmbientEnumDeclaration) {
                return new Data_Maybe.Just({
                    exp: _643.exp, 
                    name: _643.amb.value1, 
                    els: _643.amb.value2, 
                    comments: Prelude["<*>"](Data_Maybe.applyMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["<>"](Language_TypeScript_Types.semigroupComment))(_643.amb.value0))(_643.comments)
                });
            };
            return Data_Maybe.Nothing.value;
        };
        return Data_Array.mapMaybe(p_1);
    })();
    
    /**
     *  Ambient declarations
     */
    var ambientDeclarations = (function () {
        var toAmbient = function (_638) {
            if (_638 instanceof Language_TypeScript_Types.AmbientDeclaration) {
                return new Data_Maybe.Just({
                    exp: _638.value1, 
                    amb: _638.value2, 
                    comments: _638.value0
                });
            };
            return Data_Maybe.Nothing.value;
        };
        return Data_Array.mapMaybe(toAmbient);
    })();
    
    /**
     *  Classes
     */
    var ambientClassDeclarations = (function () {
        var p_1 = function (_641) {
            if (_641.amb instanceof Language_TypeScript_Types.AmbientClassDeclaration) {
                return new Data_Maybe.Just({
                    exp: _641.exp, 
                    comments: Prelude["<>"](Data_Maybe.semigroupMaybe(Language_TypeScript_Types.semigroupComment))(_641.amb.value0)(_641.comments), 
                    name: _641.amb.value1, 
                    tps: _641.amb.value2, 
                    exts: _641.amb.value3, 
                    imps: _641.amb.value4, 
                    els: _641.amb.value5
                });
            };
            return Data_Maybe.Nothing.value;
        };
        return Data_Array.mapMaybe(p_1);
    })();
    var a = element("a");
    var ambientInterfaceDeclarations = (function () {
        var p_1 = function (_637) {
            if (_637.amb instanceof Language_TypeScript_Types.AmbientInterfaceDeclaration) {
                return new Data_Maybe.Just(new Data_Tuple.Tuple(_637.exp, new Language_TypeScript_Types.Interface(Prelude["<*>"](Data_Maybe.applyMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["<>"](Language_TypeScript_Types.semigroupComment))(_637.amb.value0.value0))(_637.comments), _637.amb.value0.value1, _637.amb.value0.value2, _637.amb.value0.value3, _637.amb.value0.value4)));
            };
            return Data_Maybe.Nothing.value;
        };
        return Data_Array.mapMaybe(p_1);
    })();
    
    /**
     *  Modules
     */
    var ambientModuleDeclarations = (function () {
        var q = function (_645) {
            if (_645 instanceof Language_TypeScript_Types.AmbientModuleElement) {
                return new Data_Maybe.Just(_645.value0);
            };
            return Data_Maybe.Nothing.value;
        };
        var p_1 = function (_644) {
            if (_644.amb instanceof Language_TypeScript_Types.AmbientModuleDeclaration) {
                return new Data_Maybe.Just({
                    exp: _644.exp, 
                    name: Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(".")(_644.amb.value1), 
                    ambs: _644.amb.value2, 
                    comments: Prelude["<*>"](Data_Maybe.applyMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["<>"](Language_TypeScript_Types.semigroupComment))(_644.amb.value0))(_644.comments)
                });
            };
            if (_644.amb instanceof Language_TypeScript_Types.AmbientExternalModuleDeclaration) {
                return new Data_Maybe.Just({
                    exp: _644.exp, 
                    name: _644.amb.value1, 
                    ambs: Data_Array.mapMaybe(q)(_644.amb.value2), 
                    comments: Prelude["<*>"](Data_Maybe.applyMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["<>"](Language_TypeScript_Types.semigroupComment))(_644.amb.value0))(_644.comments)
                });
            };
            return Data_Maybe.Nothing.value;
        };
        var getName = function (o) {
            return o.name;
        };
        var collectComments = foldl1(function (o1) {
            return function (o2) {
                return {
                    exp: Control_Alt["<|>"](Data_Maybe.altMaybe)(o1.exp)(o2.exp), 
                    name: o1.name, 
                    ambs: Prelude["++"](Data_Array.semigroupArray)(o1.ambs)(o2.ambs), 
                    comments: Prelude["<*>"](Data_Maybe.applyMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["<>"](Language_TypeScript_Types.semigroupComment))(o1.comments))(o2.comments)
                };
            };
        });
        return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Array.sortBy(comparing(Prelude.ordString)(getName)))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Array.map(collectComments))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Array.groupBy(Data_Function.on(Prelude["=="](Prelude.eqString))(getName)))(Data_Array.mapMaybe(p_1))));
    })();
    var bookmark = function (names) {
        return $bang(a)(name(bookmarkName(names)))(Data_Monoid.mempty(Data_Monoid.monoidArray));
    };
    var linkToBookmark = function (names) {
        return $bang(a)(href("#" + bookmarkName(names)));
    };
    
    /**
     *  Attributes
     */
    var _class = Data_Tuple.Tuple.create("class");
    
    /**
     *  Comments
     */
    var renderComment = (function () {
        var renderCommentKeyValuePair = function (_635) {
            if (_635.value0 === "see") {
                return linkToBookmark(Data_String.split(".")(_635.value1))(text(_635.value1));
            };
            return text(_635.value1);
        };
        var renderParsedComment = function (pc) {
            return Data_Foldable.mconcat(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)([ Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(function (line) {
                return $bang(p)(_class("comments"))(text(line));
            })(pc.text), Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(function (_590) {
                if (_590.length >= 1) {
                    var _1015 = _590.slice(1);
                    return Prelude["<>"](Data_Array.semigroupArray)(p(strong(text((_590[0]).value0))))(ul(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(Prelude["<<<"](Prelude.semigroupoidArr)(li)(renderCommentKeyValuePair))(_590)));
                };
                throw new Error("Failed pattern match");
            })(Data_Array.groupBy(Data_Function.on(Prelude["=="](Prelude.eqString))(Data_Tuple.fst))(pc.other)) ]);
        };
        return Prelude["<<<"](Prelude.semigroupoidArr)(renderParsedComment)(Language_TypeScript_Comments.parseComment);
    })();
    var withClass = function (className) {
        return function (s) {
            return $bang(span)(_class(className))(text(s));
        };
    };
    var ident = withClass("identifier");
    var renderModuleName = function (_620) {
        return linkToBookmark(_620.value0)(ident(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(".")(_620.value0)));
    };
    var keyword = withClass("keyword");
    
    /**
     *  Flags
     */
    var renderExported = function (_604) {
        return Prelude["<>"](Data_Array.semigroupArray)(keyword("export"))(sp);
    };
    var renderPublicOrPrivate = function (_607) {
        if (_607 instanceof Language_TypeScript_Types.Public) {
            return Prelude["<>"](Data_Array.semigroupArray)(keyword("public"))(sp);
        };
        if (_607 instanceof Language_TypeScript_Types.Private) {
            return Prelude["<>"](Data_Array.semigroupArray)(keyword("private"))(sp);
        };
        throw new Error("Failed pattern match");
    };
    var renderStatic = function (_605) {
        return Prelude["<>"](Data_Array.semigroupArray)(keyword("static"))(sp);
    };
    var renderStringOrNumber = function (_608) {
        if (_608 instanceof Language_TypeScript_Types.String) {
            return keyword("string");
        };
        if (_608 instanceof Language_TypeScript_Types.Number) {
            return keyword("number");
        };
        throw new Error("Failed pattern match");
    };
    var literal = withClass("literal");
    var syntax = withClass("syntax");
    var angles = surround(syntax("<"))(syntax(">"));
    var braces = surround(syntax("{"))(syntax("}"));
    var colon = syntax(":");
    var comma = syntax(",");
    var parens = surround(syntax("("))(syntax(")"));
    var renderAmbientEnumDeclaration = function (moduleName) {
        return function (o) {
            return $bang(div)(_class("enum"))(Data_Foldable.mconcat(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)([ bookmark(Prelude["++"](Data_Array.semigroupArray)(moduleName)([ o.name ])), Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(renderComment)(o.comments), Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(renderExported)(o.exp), keyword("enum"), sp, ident(o.name), ul(Prelude.flip(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidArray))(o.els)(function (_595) {
                return li(code(Data_Foldable.mconcat(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)([ ident(_595.value0), Prelude.flip(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray))(_595.value1)(function (val) {
                    return Data_Foldable.mconcat(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)([ sp, syntax("="), sp, literal(Prelude.show(Prelude.showNumber)(val)) ]);
                }) ])));
            })) ]));
        };
    };
    var renderOptional = function (_606) {
        return syntax("?");
    };
    var renderTypeName = function (_618) {
        return function (_619) {
            if (_619.value0 instanceof Data_Maybe.Nothing) {
                return linkToBookmark(Prelude["++"](Data_Array.semigroupArray)(_618)([ _619.value1 ]))(ident(_619.value1));
            };
            if (_619.value0 instanceof Data_Maybe.Just) {
                return Prelude["<>"](Data_Array.semigroupArray)(renderModuleName(_619.value0.value0))(Prelude["<>"](Data_Array.semigroupArray)(syntax("."))(linkToBookmark(Prelude["++"](Data_Array.semigroupArray)(_619.value0.value0.value0)([ _619.value1 ]))(ident(_619.value1))));
            };
            throw new Error("Failed pattern match");
        };
    };
    var squares = surround(syntax("["))(syntax("]"));
    var renderTypeReference = function (_611) {
        return function (_612) {
            return Prelude["<>"](Data_Array.semigroupArray)(renderTypeName(_611)(_612.value0))(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(Prelude["<<<"](Prelude.semigroupoidArr)(angles)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(Prelude["<>"](Data_Array.semigroupArray)(comma)(sp)))(Data_Array.map(renderType(_611)))))(_612.value1));
        };
    };
    var renderTypeParameter = function (_609) {
        return function (_610) {
            return Prelude["<>"](Data_Array.semigroupArray)(ident(_610.value0))(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(function (ty) {
                return Prelude["<>"](Data_Array.semigroupArray)(sp)(Prelude["<>"](Data_Array.semigroupArray)(keyword("extends"))(Prelude["<>"](Data_Array.semigroupArray)(sp)(renderType(_609)(ty))));
            })(_610.value1));
        };
    };
    var renderTypeMember = function (_623) {
        return function (_624) {
            var renderTypeMember$prime = function (_647) {
                if (_647 instanceof Language_TypeScript_Types.PropertySignature) {
                    return Prelude["<>"](Data_Array.semigroupArray)(ident(_647.value0))(Prelude["<>"](Data_Array.semigroupArray)(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(renderOptional)(_647.value1))(Prelude["<>"](Data_Array.semigroupArray)(colon)(Prelude["<>"](Data_Array.semigroupArray)(sp)(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(renderType(_623))(_647.value2)))));
                };
                if (_647 instanceof Language_TypeScript_Types.MethodSignature) {
                    return Prelude["<>"](Data_Array.semigroupArray)(ident(_647.value0))(Prelude["<>"](Data_Array.semigroupArray)(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(renderOptional)(_647.value1))(renderParameterListAndReturnType(_623)(_647.value2)));
                };
                if (_647 instanceof Language_TypeScript_Types.CallSignature) {
                    return renderParameterListAndReturnType(_623)(_647.value0);
                };
                if (_647 instanceof Language_TypeScript_Types.ConstructSignature) {
                    return Prelude["<>"](Data_Array.semigroupArray)(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(Prelude["<<<"](Prelude.semigroupoidArr)(angles)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(Prelude["<>"](Data_Array.semigroupArray)(comma)(sp)))(Data_Array.map(renderTypeParameter(_623)))))(_647.value0))(Prelude["<>"](Data_Array.semigroupArray)(parens(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(Prelude["<>"](Data_Array.semigroupArray)(comma)(sp))(Data_Array.map(renderParameter(_623))(_647.value1))))(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(renderTypeAnnotation(_623))(_647.value2)));
                };
                if (_647 instanceof Language_TypeScript_Types.TypeIndexSignature) {
                    return renderIndexSignature(_623)(_647.value0);
                };
                throw new Error("Failed pattern match");
            };
            return Prelude["<>"](Data_Array.semigroupArray)(span(code(renderTypeMember$prime(_624.value1))))(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(renderComment)(_624.value0));
        };
    };
    var renderTypeBody = function (_615) {
        return function (_616) {
            return function (_617) {
                return _616(Data_Array.map(renderTypeMember(_615))(_617.value0));
            };
        };
    };
    var renderTypeAnnotation = function (moduleName) {
        return function (ty) {
            return Prelude["<>"](Data_Array.semigroupArray)(syntax(":"))(Prelude["<>"](Data_Array.semigroupArray)(sp)(renderType(moduleName)(ty)));
        };
    };
    var renderType = function (_613) {
        return function (_614) {
            if (_614 instanceof Language_TypeScript_Types.Predefined) {
                var predefinedTypeToString = function (_646) {
                    if (_646 instanceof Language_TypeScript_Types.AnyType) {
                        return "any";
                    };
                    if (_646 instanceof Language_TypeScript_Types.NumberType) {
                        return "number";
                    };
                    if (_646 instanceof Language_TypeScript_Types.BooleanType) {
                        return "boolean";
                    };
                    if (_646 instanceof Language_TypeScript_Types.StringType) {
                        return "string";
                    };
                    if (_646 instanceof Language_TypeScript_Types.VoidType) {
                        return "void";
                    };
                    throw new Error("Failed pattern match");
                };
                return keyword(predefinedTypeToString(_614.value0));
            };
            if (_614 instanceof Language_TypeScript_Types.TypeReference) {
                return renderTypeReference(_613)(_614.value0);
            };
            if (_614 instanceof Language_TypeScript_Types.ObjectType) {
                return renderTypeBody(_613)(Prelude["<<<"](Prelude.semigroupoidArr)(braces)(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(Prelude["<>"](Data_Array.semigroupArray)(comma)(sp))))(_614.value0);
            };
            if (_614 instanceof Language_TypeScript_Types.ArrayType) {
                return Prelude["<>"](Data_Array.semigroupArray)(renderType(_613)(_614.value0))(syntax("[]"));
            };
            if (_614 instanceof Language_TypeScript_Types.FunctionType) {
                return Prelude["<>"](Data_Array.semigroupArray)(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(Prelude["<<<"](Prelude.semigroupoidArr)(angles)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(Prelude["<>"](Data_Array.semigroupArray)(comma)(sp)))(Data_Array.map(renderTypeParameter(_613)))))(_614.value0))(Prelude["<>"](Data_Array.semigroupArray)(parens(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(Prelude["<>"](Data_Array.semigroupArray)(comma)(sp))(Data_Array.map(renderParameter(_613))(_614.value1))))(renderTypeAnnotation(_613)(_614.value2)));
            };
            if (_614 instanceof Language_TypeScript_Types.ConstructorType) {
                return Prelude["<>"](Data_Array.semigroupArray)(keyword("new"))(Prelude["<>"](Data_Array.semigroupArray)(sp)(Prelude["<>"](Data_Array.semigroupArray)(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(Prelude["<<<"](Prelude.semigroupoidArr)(angles)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(Prelude["<>"](Data_Array.semigroupArray)(comma)(sp)))(Data_Array.map(renderTypeParameter(_613)))))(_614.value0))(Prelude["<>"](Data_Array.semigroupArray)(parens(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(Prelude["<>"](Data_Array.semigroupArray)(comma)(sp))(Data_Array.map(renderParameter(_613))(_614.value1))))(renderTypeAnnotation(_613)(_614.value2)))));
            };
            throw new Error("Failed pattern match");
        };
    };
    var renderParameterListAndReturnType = function (_625) {
        return function (_626) {
            return Prelude["<>"](Data_Array.semigroupArray)(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(Prelude["<<<"](Prelude.semigroupoidArr)(angles)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(comma))(Data_Array.map(renderTypeParameter(_625)))))(_626.value0))(Prelude["<>"](Data_Array.semigroupArray)(parens(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(Prelude["<>"](Data_Array.semigroupArray)(comma)(sp))(Data_Array.map(renderParameter(_625))(_626.value1))))(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(renderTypeAnnotation(_625))(_626.value2)));
        };
    };
    var renderParameter = function (_621) {
        return function (_622) {
            if (_622 instanceof Language_TypeScript_Types.RequiredOrOptionalParameter) {
                return Prelude["<>"](Data_Array.semigroupArray)(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(renderPublicOrPrivate)(_622.value0))(Prelude["<>"](Data_Array.semigroupArray)(ident(_622.value1))(Prelude["<>"](Data_Array.semigroupArray)(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(renderOptional)(_622.value2))(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(renderTypeAnnotation(_621))(_622.value3))));
            };
            if (_622 instanceof Language_TypeScript_Types.RestParameter) {
                return Prelude["<>"](Data_Array.semigroupArray)(syntax("..."))(Prelude["<>"](Data_Array.semigroupArray)(ident(_622.value0))(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(renderTypeAnnotation(_621))(_622.value1)));
            };
            throw new Error("Failed pattern match");
        };
    };
    var renderIndexSignature = function (_627) {
        return function (_628) {
            return Prelude["<>"](Data_Array.semigroupArray)(squares(Prelude["<>"](Data_Array.semigroupArray)(ident(_628.value0))(Prelude["<>"](Data_Array.semigroupArray)(colon)(renderStringOrNumber(_628.value1)))))(renderTypeAnnotation(_627)(_628.value2));
        };
    };
    var renderAmbientVariableDeclaration = function (moduleName) {
        return function (o) {
            return span(code(Data_Foldable.mconcat(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)([ Data_Foldable.mconcat(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)([ Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(renderExported)(o.exp), keyword("var"), sp, ident(o.name), Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(renderTypeAnnotation(moduleName))(o.ty) ]), Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(renderComment)(o.comments) ])));
        };
    };
    var renderAmbientClassBodyElement = function (_602) {
        return function (_603) {
            var renderAmbientClassBodyElement$prime = function (_642) {
                if (_642 instanceof Language_TypeScript_Types.AmbientConstructorDeclaration) {
                    return Data_Foldable.mconcat(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)([ keyword("constructor"), parens(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(Prelude["<>"](Data_Array.semigroupArray)(comma)(sp))(Data_Array.map(renderParameter(_602))(_642.value0))) ]);
                };
                if (_642 instanceof Language_TypeScript_Types.AmbientMemberDeclaration && _642.value3 instanceof Data_Either.Left) {
                    return Data_Foldable.mconcat(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)([ Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(renderPublicOrPrivate)(_642.value0), Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(renderStatic)(_642.value1), keyword("var"), sp, ident(_642.value2), Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(renderTypeAnnotation(_602))(_642.value3.value0) ]);
                };
                if (_642 instanceof Language_TypeScript_Types.AmbientMemberDeclaration && _642.value3 instanceof Data_Either.Right) {
                    return Data_Foldable.mconcat(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)([ Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(renderPublicOrPrivate)(_642.value0), Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(renderStatic)(_642.value1), keyword("function"), sp, ident(_642.value2), renderParameterListAndReturnType(_602)(_642.value3.value0) ]);
                };
                if (_642 instanceof Language_TypeScript_Types.AmbientIndexSignature) {
                    return renderIndexSignature(_602)(_642.value0);
                };
                throw new Error("Failed pattern match");
            };
            return Data_Foldable.mconcat(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)([ span(code(renderAmbientClassBodyElement$prime(_603.value1))), Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(renderComment)(_603.value0) ]);
        };
    };
    var renderAmbientFunctionDeclaration = function (moduleName) {
        return function (o) {
            return Data_Foldable.mconcat(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)([ span(code(Data_Foldable.mconcat(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)([ Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(renderExported)(o.exp), keyword("function"), sp, ident(o.name), renderParameterListAndReturnType(moduleName)(o.plrt) ]))), Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(renderComment)(o.comments) ]);
        };
    };
    var renderAmbientClassDeclaration = function (moduleName) {
        return function (level) {
            return function (o) {
                return Data_Foldable.mconcat(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)([ bookmark(Prelude["++"](Data_Array.semigroupArray)(moduleName)([ o.name ])), header(level)(Data_Foldable.mconcat(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)([ Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(renderExported)(o.exp), text(o.name) ])), $bang(div)(_class("class"))(Data_Foldable.mconcat(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)([ Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(renderComment)(o.comments), $bang(p)(_class("class_decl mono"))(Data_Foldable.mconcat(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)([ keyword("class"), sp, ident(o.name), Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(Prelude["<<<"](Prelude.semigroupoidArr)(angles)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(Prelude["<>"](Data_Array.semigroupArray)(comma)(sp)))(Data_Array.map(renderTypeParameter(moduleName)))))(o.tps), Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(function (e) {
                    return Prelude["<>"](Data_Array.semigroupArray)(sp)(Prelude["<>"](Data_Array.semigroupArray)(keyword("extends"))(Prelude["<>"](Data_Array.semigroupArray)(sp)(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(Prelude["<>"](Data_Array.semigroupArray)(comma)(sp))(Data_Array.map(renderTypeReference(moduleName))(e)))));
                })(o.exts), Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(function (e) {
                    return Prelude["<>"](Data_Array.semigroupArray)(sp)(Prelude["<>"](Data_Array.semigroupArray)(keyword("implements"))(Prelude["<>"](Data_Array.semigroupArray)(sp)(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(Prelude["<>"](Data_Array.semigroupArray)(comma)(sp))(Data_Array.map(renderTypeReference(moduleName))(e)))));
                })(o.imps) ])), ul(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(Prelude["<<<"](Prelude.semigroupoidArr)(li)(renderAmbientClassBodyElement(moduleName)))(o.els)) ])) ]);
            };
        };
    };
    var renderInterface = function (_599) {
        return function (_600) {
            return function (_601) {
                return Data_Foldable.mconcat(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)([ bookmark(Prelude["++"](Data_Array.semigroupArray)(_599)([ _601.value1.value1 ])), header(_600)(ident(_601.value1.value1)), $bang(div)(_class("interface"))(Prelude["<>"](Data_Array.semigroupArray)($bang(p)(_class("class_decl mono"))(Prelude["<>"](Data_Array.semigroupArray)(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(renderExported)(_601.value0))(Prelude["<>"](Data_Array.semigroupArray)(keyword("interface"))(Prelude["<>"](Data_Array.semigroupArray)(sp)(Prelude["<>"](Data_Array.semigroupArray)(ident(_601.value1.value1))(Prelude["<>"](Data_Array.semigroupArray)(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(Prelude["<<<"](Prelude.semigroupoidArr)(angles)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(Prelude["<>"](Data_Array.semigroupArray)(comma)(sp)))(Data_Array.map(renderTypeParameter(_599)))))(_601.value1.value2))(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(function (e_1) {
                    return Prelude["<>"](Data_Array.semigroupArray)(sp)(Prelude["<>"](Data_Array.semigroupArray)(keyword("extends"))(Prelude["<>"](Data_Array.semigroupArray)(sp)(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(Prelude["<>"](Data_Array.semigroupArray)(comma)(sp))(Data_Array.map(renderTypeReference(_599))(e_1)))));
                })(_601.value1.value3))))))))(Prelude["<>"](Data_Array.semigroupArray)(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(renderComment)(_601.value1.value0))(renderTypeBody(_599)(Prelude["<<<"](Prelude.semigroupoidArr)(ul)(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(li)))(_601.value1.value4)))) ]);
            };
        };
    };
    var renderAmbientInterfaceDeclaration = function (moduleName) {
        return function (level) {
            return renderInterface(moduleName)(level);
        };
    };
    var renderAmbientModuleDeclaration = function (moduleName) {
        return function (level) {
            return function (o) {
                return $bang(div)(_class("section"))(Data_Foldable.mconcat(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)([ bookmark(moduleName), header(level)(text("Module " + Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(".")(moduleName))), Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(renderComment)(o.comments), renderAmbientDeclarations(moduleName)(level + 1)(Data_Array.map(function (a_1) {
                    return {
                        exp: o.exp, 
                        amb: a_1, 
                        comments: Data_Maybe.Nothing.value
                    };
                })(o.ambs)) ]));
            };
        };
    };
    var renderAmbientDeclarations = function (moduleName) {
        return function (level) {
            return function (ds) {
                var section = function (outer) {
                    return function (inner) {
                        return function (name_1) {
                            return function (xs) {
                                return function (render) {
                                    return ifM(!Data_Array["null"](xs))($bang(div)(_class("section"))(Data_Foldable.mconcat(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)([ header(level)(text(name_1)), outer(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(Prelude["<<<"](Prelude.semigroupoidArr)(inner)(render))(xs)) ])));
                                };
                            };
                        };
                    };
                };
                var vars = ambientVariableDeclarations(ds);
                var modules = ambientModuleDeclarations(ds);
                var interfaces = ambientInterfaceDeclarations(ds);
                var functions = ambientFunctionDeclarations(ds);
                var enums = ambientEnumDeclarations(ds);
                var classes = ambientClassDeclarations(ds);
                return Data_Foldable.mconcat(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)([ section(ul)(li)("Variables")(vars)(renderAmbientVariableDeclaration(moduleName)), section(ul)(li)("Functions")(functions)(renderAmbientFunctionDeclaration(moduleName)), section(Prelude.id(Prelude.categoryArr))(Prelude.id(Prelude.categoryArr))("Classes")(classes)(renderAmbientClassDeclaration(moduleName)(level + 1)), section(Prelude.id(Prelude.categoryArr))(Prelude.id(Prelude.categoryArr))("Interfaces")(interfaces)(renderAmbientInterfaceDeclaration(moduleName)(level + 1)), section(Prelude.id(Prelude.categoryArr))(Prelude.id(Prelude.categoryArr))("Enums")(enums)(renderAmbientEnumDeclaration(moduleName)), section(Prelude.id(Prelude.categoryArr))(Prelude.id(Prelude.categoryArr))("Modules")(modules)(function (o) {
                    return renderAmbientModuleDeclaration(Prelude["++"](Data_Array.semigroupArray)(moduleName)([ o.name ]))(level + 1)(o);
                }) ]);
            };
        };
    };
    var generateDocument = function (ds) {
        var interfaces = topLevelInterfaces(ds);
        var interfacesHtml = ifM(!Data_Array["null"](interfaces))(Prelude["<>"](Data_Array.semigroupArray)(header(1)(text("Interfaces")))(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)(renderInterface([  ])(2))(interfaces)));
        var declarations = ambientDeclarations(ds);
        var declarationsHtml = ifM(!Data_Array["null"](declarations))(Prelude["<>"](Data_Array.semigroupArray)(header(1)(text("Declarations")))(renderAmbientDeclarations([  ])(2)(declarations)));
        var content = Prelude["<>"](Data_Array.semigroupArray)(interfacesHtml)(declarationsHtml);
        return html(Data_Foldable.mconcat(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)([ head($bang($bang(link)(rel("stylesheet")))(href("style.css"))(Data_Monoid.mempty(Data_Monoid.monoidArray))), body(content) ]));
    };
    return {
        Text: Text, 
        Element: Element, 
        generateDocument: generateDocument, 
        ifM: ifM, 
        renderIndexSignature: renderIndexSignature, 
        renderParameterListAndReturnType: renderParameterListAndReturnType, 
        renderTypeMember: renderTypeMember, 
        renderTypeAnnotation: renderTypeAnnotation, 
        renderParameter: renderParameter, 
        renderModuleName: renderModuleName, 
        renderTypeName: renderTypeName, 
        renderTypeBody: renderTypeBody, 
        renderType: renderType, 
        renderTypeReference: renderTypeReference, 
        renderTypeParameter: renderTypeParameter, 
        renderStringOrNumber: renderStringOrNumber, 
        renderPublicOrPrivate: renderPublicOrPrivate, 
        renderOptional: renderOptional, 
        renderStatic: renderStatic, 
        renderExported: renderExported, 
        renderAmbientModuleDeclaration: renderAmbientModuleDeclaration, 
        ambientModuleDeclarations: ambientModuleDeclarations, 
        renderAmbientEnumDeclaration: renderAmbientEnumDeclaration, 
        ambientEnumDeclarations: ambientEnumDeclarations, 
        renderAmbientClassBodyElement: renderAmbientClassBodyElement, 
        renderAmbientClassDeclaration: renderAmbientClassDeclaration, 
        ambientClassDeclarations: ambientClassDeclarations, 
        renderAmbientFunctionDeclaration: renderAmbientFunctionDeclaration, 
        ambientFunctionDeclarations: ambientFunctionDeclarations, 
        renderAmbientVariableDeclaration: renderAmbientVariableDeclaration, 
        ambientVariableDeclarations: ambientVariableDeclarations, 
        renderAmbientDeclarations: renderAmbientDeclarations, 
        ambientDeclarations: ambientDeclarations, 
        renderAmbientInterfaceDeclaration: renderAmbientInterfaceDeclaration, 
        ambientInterfaceDeclarations: ambientInterfaceDeclarations, 
        renderInterface: renderInterface, 
        topLevelInterfaces: topLevelInterfaces, 
        foldl1: foldl1, 
        comparing: comparing, 
        linkToBookmark: linkToBookmark, 
        bookmark: bookmark, 
        bookmarkName: bookmarkName, 
        renderComment: renderComment, 
        squares: squares, 
        braces: braces, 
        angles: angles, 
        parens: parens, 
        surround: surround, 
        colon: colon, 
        comma: comma, 
        literal: literal, 
        syntax: syntax, 
        ident: ident, 
        keyword: keyword, 
        withClass: withClass, 
        sp: sp, 
        name: name, 
        href: href, 
        rel: rel, 
        _class: _class, 
        header: header, 
        strong: strong, 
        a: a, 
        code: code, 
        li: li, 
        ul: ul, 
        div: div, 
        p: p, 
        span: span, 
        body: body, 
        link: link, 
        head: head, 
        html: html, 
        "!": $bang, 
        element: element, 
        text: text, 
        escape: escape, 
        htmlToString: htmlToString
    };
})();
var PS = PS || {};
PS.Node_Yargs_Applicative = (function () {
    "use strict";
    var Data_Monoid = PS.Data_Monoid;
    var Prelude = PS.Prelude;
    var Node_Yargs = PS.Node_Yargs;
    var Control_Monad_Eff_Exception = PS.Control_Monad_Eff_Exception;
    var Control_Monad_Eff_Unsafe = PS.Control_Monad_Eff_Unsafe;
    var Node_Yargs_Setup = PS.Node_Yargs_Setup;
    var Data_Foreign_Class = PS.Data_Foreign_Class;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Alt = PS.Control_Alt;
    var Data_Array = PS.Data_Array;
    var Data_Foreign_Index = PS.Data_Foreign_Index;
    var Y = function (x) {
        return x;
    };
    var Arg = function (arg) {
        this.arg = arg;
    };
    var unY = function (_648) {
        return _648;
    };
    var runY = function (_649) {
        return function (_650) {
            return function __do() {
                var _34 = Node_Yargs.runYargs(Prelude["<>"](Node_Yargs_Setup.semigroupYargsSetup)(_649)(_650.setup))();
                return (function () {
                    var _1124 = _650.read(_34);
                    if (_1124 instanceof Data_Either.Left) {
                        return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error(Prelude.show(Data_Foreign.showForeignError)(_1124.value0)));
                    };
                    if (_1124 instanceof Data_Either.Right) {
                        return Control_Monad_Eff_Unsafe.unsafeInterleaveEff(_1124.value0);
                    };
                    throw new Error("Failed pattern match");
                })()();
            };
        };
    };
    var functorY = new Prelude.Functor(function (_651) {
        return function (_652) {
            return {
                setup: _652.setup, 
                read: function (value) {
                    return Prelude["<$>"](Data_Either.functorEither)(_651)(_652.read(value));
                }
            };
        };
    });
    var argString = new Arg(function (key) {
        return {
            setup: Node_Yargs_Setup.string(key), 
            read: Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)(key)
        };
    });
    var arg = function (dict) {
        return dict.arg;
    };
    var yarg = function (__dict_Arg_528) {
        return function (key) {
            return function (aliases) {
                return function (desc) {
                    return function (required) {
                        return function (needArg) {
                            var y = unY(arg(__dict_Arg_528)(key));
                            return {
                                setup: Prelude["<>"](Node_Yargs_Setup.semigroupYargsSetup)(y.setup)(Prelude["<>"](Node_Yargs_Setup.semigroupYargsSetup)(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Node_Yargs_Setup.monoidYargsSetup)(function (a) {
                                    return Node_Yargs_Setup.alias(key)(a);
                                })(aliases))(Prelude["<>"](Node_Yargs_Setup.semigroupYargsSetup)(Data_Foldable.foldMap(Data_Foldable.foldableEither)(Node_Yargs_Setup.monoidYargsSetup)(function (m) {
                                    return Node_Yargs_Setup.demand(key)(m);
                                })(required))(Prelude["<>"](Node_Yargs_Setup.semigroupYargsSetup)(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Node_Yargs_Setup.monoidYargsSetup)(function (s) {
                                    return Node_Yargs_Setup.describe(key)(s);
                                })(desc))((function () {
                                    if (needArg) {
                                        return Node_Yargs_Setup.requiresArg(key);
                                    };
                                    if (!needArg) {
                                        return Data_Monoid.mempty(Node_Yargs_Setup.monoidYargsSetup);
                                    };
                                    throw new Error("Failed pattern match");
                                })())))), 
                                read: (function () {
                                    if (required instanceof Data_Either.Left) {
                                        return function (value) {
                                            return Control_Alt["<|>"](Data_Either.altEither)(y.read(value))(Prelude.pure(Data_Either.applicativeEither)(required.value0));
                                        };
                                    };
                                    return y.read;
                                })()
                            };
                        };
                    };
                };
            };
        };
    };
    var applyT = new Prelude.Apply(function (_653) {
        return function (_654) {
            return {
                setup: Prelude["<>"](Node_Yargs_Setup.semigroupYargsSetup)(_653.setup)(_654.setup), 
                read: function (value) {
                    return Prelude["<*>"](Data_Either.applyEither)(_653.read(value))(_654.read(value));
                }
            };
        };
    }, function () {
        return functorY;
    });
    return {
        Arg: Arg, 
        yarg: yarg, 
        arg: arg, 
        runY: runY, 
        functorY: functorY, 
        applyT: applyT, 
        argString: argString
    };
})();
var PS = PS || {};
PS.Text_Parsing_Parser = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Identity = PS.Data_Identity;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Monad = PS.Control_Monad;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_State_Class = PS.Control_Monad_State_Class;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Monad_Error_Class = PS.Control_Monad_Error_Class;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Control_Plus = PS.Control_Plus;
    var ParseError = (function () {
        function ParseError(value0) {
            this.value0 = value0;
        };
        ParseError.create = function (value0) {
            return new ParseError(value0);
        };
        return ParseError;
    })();
    var ParserT = function (x) {
        return x;
    };
    var unParserT = function (_655) {
        return _655;
    };
    var runParserT = function (__dict_Monad_529) {
        return function (s) {
            return function (p) {
                return Prelude[">>="](__dict_Monad_529["__superclass_Prelude.Bind_1"]())(unParserT(p)(s))(function (_35) {
                    return Prelude["return"](__dict_Monad_529)(_35.result);
                });
            };
        };
    };
    var lazy1ParserT = new Control_Lazy.Lazy1(function (f) {
        return ParserT(function (s) {
            return unParserT(f(Prelude.unit))(s);
        });
    });
    var functorParserT = function (__dict_Functor_534) {
        return new Prelude.Functor(function (f) {
            return function (p) {
                var f$prime = function (o) {
                    return {
                        input: o.input, 
                        result: Prelude["<$>"](Data_Either.functorEither)(f)(o.result), 
                        consumed: o.consumed
                    };
                };
                return ParserT(function (s) {
                    return Prelude["<$>"](__dict_Functor_534)(f$prime)(unParserT(p)(s));
                });
            };
        });
    };
    var fail = function (__dict_Monad_535) {
        return function (message) {
            return ParserT(function (s) {
                return Prelude["return"](__dict_Monad_535)({
                    input: s, 
                    consumed: false, 
                    result: new Data_Either.Left(new ParseError({
                        message: message
                    }))
                });
            });
        };
    };
    var errorParseError = new Control_Monad_Error.Error(new ParseError({
        message: ""
    }), function (msg) {
        return new ParseError({
            message: msg
        });
    });
    var monadParserT = function (__dict_Monad_533) {
        return new Prelude.Monad(function () {
            return applicativeParserT(__dict_Monad_533);
        }, function () {
            return bindParserT(__dict_Monad_533);
        });
    };
    var bindParserT = function (__dict_Monad_538) {
        return new Prelude.Bind(function (p) {
            return function (f) {
                var updateConsumedFlag = function (c) {
                    return function (o) {
                        return {
                            input: o.input, 
                            consumed: c || o.consumed, 
                            result: o.result
                        };
                    };
                };
                return ParserT(function (s) {
                    return Prelude[">>="](__dict_Monad_538["__superclass_Prelude.Bind_1"]())(unParserT(p)(s))(function (o) {
                        if (o.result instanceof Data_Either.Left) {
                            return Prelude["return"](__dict_Monad_538)({
                                input: o.input, 
                                result: new Data_Either.Left(o.result.value0), 
                                consumed: o.consumed
                            });
                        };
                        if (o.result instanceof Data_Either.Right) {
                            return Prelude["<$>"](((__dict_Monad_538["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(updateConsumedFlag(o.consumed))(unParserT(f(o.result.value0))(o.input));
                        };
                        throw new Error("Failed pattern match");
                    });
                });
            };
        }, function () {
            return applyParserT(__dict_Monad_538);
        });
    };
    var applyParserT = function (__dict_Monad_539) {
        return new Prelude.Apply(Prelude.ap(monadParserT(__dict_Monad_539)), function () {
            return functorParserT(((__dict_Monad_539["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        });
    };
    var applicativeParserT = function (__dict_Monad_540) {
        return new Prelude.Applicative(function () {
            return applyParserT(__dict_Monad_540);
        }, function (a) {
            return ParserT(function (s) {
                return Prelude.pure(__dict_Monad_540["__superclass_Prelude.Applicative_0"]())({
                    input: s, 
                    result: new Data_Either.Right(a), 
                    consumed: false
                });
            });
        });
    };
    var altParserT = function (__dict_Monad_542) {
        return new Control_Alt.Alt(function (p1) {
            return function (p2) {
                return ParserT(function (s) {
                    return Prelude[">>="](__dict_Monad_542["__superclass_Prelude.Bind_1"]())(unParserT(p1)(s))(function (o) {
                        if (o.result instanceof Data_Either.Left && !o.consumed) {
                            return unParserT(p2)(s);
                        };
                        return Prelude["return"](__dict_Monad_542)(o);
                    });
                });
            };
        }, function () {
            return functorParserT(((__dict_Monad_542["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        });
    };
    var plusParserT = function (__dict_Monad_536) {
        return new Control_Plus.Plus(function () {
            return altParserT(__dict_Monad_536);
        }, fail(__dict_Monad_536)("No alternative"));
    };
    var alternativeParserT = function (__dict_Monad_541) {
        return new Control_Alternative.Alternative(function () {
            return plusParserT(__dict_Monad_541);
        }, function () {
            return applicativeParserT(__dict_Monad_541);
        });
    };
    return {
        ParserT: ParserT, 
        ParseError: ParseError, 
        fail: fail, 
        runParserT: runParserT, 
        unParserT: unParserT, 
        errorParseError: errorParseError, 
        functorParserT: functorParserT, 
        applyParserT: applyParserT, 
        applicativeParserT: applicativeParserT, 
        altParserT: altParserT, 
        plusParserT: plusParserT, 
        alternativeParserT: alternativeParserT, 
        bindParserT: bindParserT, 
        monadParserT: monadParserT, 
        lazy1ParserT: lazy1ParserT
    };
})();
var PS = PS || {};
PS.Text_Parsing_Parser_Combinators = (function () {
    "use strict";
    var Text_Parsing_Parser = PS.Text_Parsing_Parser;
    var Prelude = PS.Prelude;
    var Control_Alternative = PS.Control_Alternative;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Either = PS.Data_Either;
    var Control_Alt = PS.Control_Alt;
    var Control_Apply = PS.Control_Apply;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Monad = PS.Control_Monad;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Error_Class = PS.Control_Monad_Error_Class;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_State_Class = PS.Control_Monad_State_Class;
    var $$try = function (__dict_Functor_544) {
        return function (p) {
            var try$prime = function (_659) {
                return function (_660) {
                    if (_660.result instanceof Data_Either.Left) {
                        return {
                            input: _659, 
                            result: _660.result, 
                            consumed: false
                        };
                    };
                    return _660;
                };
            };
            return Text_Parsing_Parser.ParserT(function (s) {
                return Prelude["<$>"](__dict_Functor_544)(try$prime(s))(Text_Parsing_Parser.unParserT(p)(s));
            });
        };
    };
    var sepEndBy1 = function (__dict_Monad_547) {
        return function (p) {
            return function (sep) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_547))(p)(function (_40) {
                    return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_547))(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_547))(sep)(function () {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_547))(sepEndBy(__dict_Monad_547)(p)(sep))(function (_39) {
                            return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_547))(Prelude[":"](_40)(_39));
                        });
                    }))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_547))([ _40 ]));
                });
            };
        };
    };
    var sepEndBy = function (__dict_Monad_548) {
        return function (p) {
            return function (sep) {
                return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_548))(sepEndBy1(__dict_Monad_548)(p)(sep))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_548))([  ]));
            };
        };
    };
    var sepBy1 = function (__dict_Monad_549) {
        return function (p) {
            return function (sep) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_549))(p)(function (_38) {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_549))(Control_Alternative.many(Text_Parsing_Parser.alternativeParserT(__dict_Monad_549))(Text_Parsing_Parser.lazy1ParserT)(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_549))(sep)(function () {
                        return p;
                    })))(function (_37) {
                        return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_549))(Prelude[":"](_38)(_37));
                    });
                });
            };
        };
    };
    var sepBy = function (__dict_Monad_550) {
        return function (p) {
            return function (sep) {
                return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_550))(sepBy1(__dict_Monad_550)(p)(sep))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_550))([  ]));
            };
        };
    };
    var option = function (__dict_Monad_552) {
        return function (a) {
            return function (p) {
                return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_552))(p)(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_552))(a));
            };
        };
    };
    var optionMaybe = function (__dict_Functor_553) {
        return function (__dict_Monad_554) {
            return function (p) {
                return option(__dict_Monad_554)(Data_Maybe.Nothing.value)(Prelude["<$>"](Text_Parsing_Parser.functorParserT(__dict_Functor_553))(Data_Maybe.Just.create)(p));
            };
        };
    };
    var choice = function (__dict_Monad_561) {
        return function (_657) {
            if (_657.length === 0) {
                return Text_Parsing_Parser.fail(__dict_Monad_561)("Nothing to parse");
            };
            if (_657.length === 1) {
                return _657[0];
            };
            if (_657.length >= 1) {
                var _1152 = _657.slice(1);
                return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_561))(_657[0])(choice(__dict_Monad_561)(_1152));
            };
            throw new Error("Failed pattern match");
        };
    };
    var between = function (__dict_Monad_568) {
        return function (open) {
            return function (close) {
                return function (p) {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_568))(open)(function () {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_568))(p)(function (_36) {
                            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_568))(close)(function () {
                                return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_568))(_36);
                            });
                        });
                    });
                };
            };
        };
    };
    return {
        choice: choice, 
        sepEndBy1: sepEndBy1, 
        sepEndBy: sepEndBy, 
        sepBy1: sepBy1, 
        sepBy: sepBy, 
        "try": $$try, 
        optionMaybe: optionMaybe, 
        option: option, 
        between: between
    };
})();
var PS = PS || {};
PS.Language_TypeScript_Parser = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Text_Parsing_Parser_Combinators = PS.Text_Parsing_Parser_Combinators;
    var Control_Alternative = PS.Control_Alternative;
    var Data_Array_Unsafe = PS.Data_Array_Unsafe;
    var Control_Lazy = PS.Control_Lazy;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Either = PS.Data_Either;
    var Language_TypeScript_Types = PS.Language_TypeScript_Types;
    var Language_TypeScript_Lexer = PS.Language_TypeScript_Lexer;
    var Text_Parsing_Parser = PS.Text_Parsing_Parser;
    var Control_Apply = PS.Control_Apply;
    var Control_Alt = PS.Control_Alt;
    var Control_Monad_Trampoline = PS.Control_Monad_Trampoline;
    var Control_Monad_Free = PS.Control_Monad_Free;
    var Data_Lazy = PS.Data_Lazy;
    var match = function (f) {
        return function (exp) {
            return function (ts) {
                return Prelude["return"](Control_Monad_Free.monadFree(Data_Lazy.functorLazy))((function () {
                    if (ts.length >= 1) {
                        var _1158 = ts.slice(1);
                        var _1155 = f((ts[0]).token);
                        if (_1155 instanceof Data_Maybe.Just) {
                            return {
                                consumed: true, 
                                input: _1158, 
                                result: new Data_Either.Right(_1155.value0)
                            };
                        };
                        if (_1155 instanceof Data_Maybe.Nothing) {
                            return {
                                consumed: false, 
                                input: ts, 
                                result: new Data_Either.Left(Control_Monad_Error.strMsg(Text_Parsing_Parser.errorParseError)("Expected " + (exp + (", found token " + (Prelude.show(Language_TypeScript_Lexer.showToken)((ts[0]).token) + (" at line " + (Prelude.show(Prelude.showNumber)((ts[0]).line) + (", column " + Prelude.show(Prelude.showNumber)((ts[0]).column)))))))))
                            };
                        };
                        throw new Error("Failed pattern match");
                    };
                    return {
                        consumed: false, 
                        input: ts, 
                        result: new Data_Either.Left(Control_Monad_Error.strMsg(Text_Parsing_Parser.errorParseError)("Expected " + (exp + ", found EOF")))
                    };
                })());
            };
        };
    };
    var matchOne = function (t) {
        var f = function (_661) {
            if (Prelude["=="](Language_TypeScript_Lexer.eqToken)(t)(_661)) {
                return new Data_Maybe.Just(_661);
            };
            return Data_Maybe.Nothing.value;
        };
        return match(f);
    };
    var parens = Text_Parsing_Parser_Combinators.between(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(matchOne(Language_TypeScript_Lexer.LParen.value)("("))(matchOne(Language_TypeScript_Lexer.RParen.value)(")"));
    var questionMark = matchOne(Language_TypeScript_Lexer.QuestionMark.value)("?");
    var semi = matchOne(Language_TypeScript_Lexer.Semi.value)(";");
    var squares = Text_Parsing_Parser_Combinators.between(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(matchOne(Language_TypeScript_Lexer.LSquare.value)("["))(matchOne(Language_TypeScript_Lexer.RSquare.value)("]"));
    var reserved = function (r) {
        var f = function (_662) {
            if (_662 instanceof Language_TypeScript_Lexer.IdentOrKeyword && _662.value0 === r) {
                return new Data_Maybe.Just(Prelude.unit);
            };
            return Data_Maybe.Nothing.value;
        };
        return match(f)(Prelude.show(Prelude.showString)(r));
    };
    var publicOrPrivate = Text_Parsing_Parser_Combinators.choice(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))([ Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(reserved("public"))(Prelude["return"](Text_Parsing_Parser.monadParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.Public.value)), Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(reserved("private"))(Prelude["return"](Text_Parsing_Parser.monadParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.Private.value)) ]);
    var $$static = Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(reserved("static"))(Prelude["return"](Text_Parsing_Parser.monadParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.Static.value));
    var stringOrNumber = Text_Parsing_Parser_Combinators.choice(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))([ Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(reserved("string"))(Prelude["return"](Text_Parsing_Parser.monadParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.String.value)), Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(reserved("number"))(Prelude["return"](Text_Parsing_Parser.monadParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.Number.value)) ]);
    var stringLiteral = (function () {
        var f = function (_665) {
            if (_665 instanceof Language_TypeScript_Lexer.StringLiteral) {
                return new Data_Maybe.Just(_665.value0);
            };
            return Data_Maybe.Nothing.value;
        };
        return match(f)("string literal");
    })();
    var integer = (function () {
        var f = function (_664) {
            if (_664 instanceof Language_TypeScript_Lexer.Natural) {
                return new Data_Maybe.Just(_664.value0);
            };
            return Data_Maybe.Nothing.value;
        };
        return match(f)("integer");
    })();
    var identifier = (function () {
        var reservedNames = [ "break", "do", "instanceof", "typeof", "case", "else", "new", "var", "catch", "finally", "return", "void", "continue", "for", "switch", "while", "debugger", "function", "this", "with", "default", "if", "throw", "delete", "in", "try", "class", "enum", "extends", "super", "const", "export", "import", "implements", "let", "private", "public", "yield", "interface", "package", "protected", "static" ];
        var f = function (_663) {
            if (_663 instanceof Language_TypeScript_Lexer.IdentOrKeyword && Data_Foldable.notElem(Prelude.eqString)(Data_Foldable.foldableArray)(_663.value0)(reservedNames)) {
                return new Data_Maybe.Just(_663.value0);
            };
            return Data_Maybe.Nothing.value;
        };
        return match(f)("identifier");
    })();
    var propertyName = Control_Alt["<|>"](Text_Parsing_Parser.altParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(identifier)(stringLiteral);
    var exported = Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(reserved("export"))(Prelude["return"](Text_Parsing_Parser.monadParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.Exported.value));
    var equals = matchOne(Language_TypeScript_Lexer.Equals.value)("=");
    var eof = Text_Parsing_Parser.ParserT(function (ts) {
        return Prelude["return"](Control_Monad_Free.monadFree(Data_Lazy.functorLazy))((function () {
            if (ts.length === 0) {
                return {
                    consumed: false, 
                    input: ts, 
                    result: new Data_Either.Right(Prelude.unit)
                };
            };
            if (ts.length >= 1) {
                var _1170 = ts.slice(1);
                return {
                    consumed: false, 
                    input: ts, 
                    result: new Data_Either.Left(Control_Monad_Error.strMsg(Text_Parsing_Parser.errorParseError)("Expected EOF, found token " + (Prelude.show(Language_TypeScript_Lexer.showToken)((ts[0]).token) + (" at line " + (Prelude.show(Prelude.showNumber)((ts[0]).line) + (", column " + Prelude.show(Prelude.showNumber)((ts[0]).column)))))))
                };
            };
            throw new Error("Failed pattern match");
        })());
    });
    var ellipsis = matchOne(Language_TypeScript_Lexer.Ellipsis.value)("...");
    var dot = matchOne(Language_TypeScript_Lexer.Dot.value)(".");
    var comments = function (ts) {
        return Prelude["return"](Control_Monad_Free.monadFree(Data_Lazy.functorLazy))((function () {
            if (ts.length >= 1) {
                var _1173 = ts.slice(1);
                return {
                    consumed: false, 
                    input: ts, 
                    result: new Data_Either.Right(new Data_Maybe.Just((ts[0]).comments))
                };
            };
            return {
                consumed: false, 
                input: ts, 
                result: new Data_Either.Right(Data_Maybe.Nothing.value)
            };
        })());
    };
    var comma = matchOne(Language_TypeScript_Lexer.Comma.value)(",");
    var commaSep = function (p) {
        return Text_Parsing_Parser_Combinators.sepBy(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(p)(comma);
    };
    var commaSep1 = function (p) {
        return Text_Parsing_Parser_Combinators.sepBy1(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(p)(comma);
    };
    var colon = matchOne(Language_TypeScript_Lexer.Colon.value)(":");
    var braces = Text_Parsing_Parser_Combinators.between(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(matchOne(Language_TypeScript_Lexer.LBrace.value)("{"))(matchOne(Language_TypeScript_Lexer.RBrace.value)("}"));
    var arrow = matchOne(Language_TypeScript_Lexer.Arrow.value)("=>");
    var angles = Text_Parsing_Parser_Combinators.between(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(matchOne(Language_TypeScript_Lexer.LAngle.value)("<"))(matchOne(Language_TypeScript_Lexer.RAngle.value)(">"));
    var typeRef = (function () {
        var typeName = (function () {
            var toTypeName = function (_667) {
                if (_667.length === 1) {
                    return new Language_TypeScript_Types.TypeName(Data_Maybe.Nothing.value, _667[0]);
                };
                return new Language_TypeScript_Types.TypeName(Data_Maybe.Just.create(Language_TypeScript_Types.ModuleName.create(Data_Array_Unsafe.init(_667))), Data_Array_Unsafe.last(_667));
            };
            return Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(toTypeName)(Text_Parsing_Parser_Combinators.sepBy1(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(identifier)(dot));
        })();
        var typeArguments = angles(Control_Lazy.defer1(Text_Parsing_Parser.lazy1ParserT)(function (_) {
            return commaSep1(_type);
        }));
        return Control_Lazy.defer1(Text_Parsing_Parser.lazy1ParserT)(function (_) {
            return Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.TypeRef.create)(typeName))(Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(typeArguments));
        });
    })();
    var typeParameters = (function () {
        var typeParameter = Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.TypeParameter.create)(identifier))(Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(reserved("extends"))(Control_Lazy.defer1(Text_Parsing_Parser.lazy1ParserT)(function (_) {
            return _type;
        }))));
        return Control_Lazy.defer1(Text_Parsing_Parser.lazy1ParserT)(function (_) {
            return angles(commaSep1(typeParameter));
        });
    })();
    var typeBody = (function () {
        var typeIndexSignature = Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.TypeIndexSignature.create)(Control_Lazy.defer1(Text_Parsing_Parser.lazy1ParserT)(function (_) {
            return indexSignature;
        }));
        var propertySignature = Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.PropertySignature.create)(propertyName))(Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(questionMark)(Prelude["return"](Text_Parsing_Parser.monadParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.Optional.value)))))(Control_Lazy.defer1(Text_Parsing_Parser.lazy1ParserT)(function (_) {
            return Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(typeAnnotation);
        }));
        var methodSignature = Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.MethodSignature.create)(propertyName))(Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(questionMark)(Prelude["return"](Text_Parsing_Parser.monadParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.Optional.value)))))(Control_Lazy.defer1(Text_Parsing_Parser.lazy1ParserT)(function (_) {
            return parameterListAndReturnType;
        }));
        var constructSignature = Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.ConstructSignature.create)(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(reserved("new"))(Control_Lazy.defer1(Text_Parsing_Parser.lazy1ParserT)(function (_) {
            return Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(typeParameters);
        }))))(Control_Lazy.defer1(Text_Parsing_Parser.lazy1ParserT)(function (_) {
            return parens(parameterList);
        })))(Control_Lazy.defer1(Text_Parsing_Parser.lazy1ParserT)(function (_) {
            return Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(typeAnnotation);
        }));
        var callSignature = Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.CallSignature.create)(Control_Lazy.defer1(Text_Parsing_Parser.lazy1ParserT)(function (_) {
            return parameterListAndReturnType;
        }));
        var typeMember = Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Data_Tuple.Tuple.create)(comments))(Control_Lazy.defer1(Text_Parsing_Parser.lazy1ParserT)(function (_) {
            return Text_Parsing_Parser_Combinators.choice(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))([ constructSignature, Text_Parsing_Parser_Combinators["try"](Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(methodSignature), Text_Parsing_Parser_Combinators["try"](Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(propertySignature), Text_Parsing_Parser_Combinators["try"](Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(callSignature), Text_Parsing_Parser_Combinators["try"](Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(typeIndexSignature) ]);
        }));
        return Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.TypeBody.create)(Text_Parsing_Parser_Combinators.sepEndBy(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(typeMember)(semi));
    })();
    var typeAnnotation = Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(colon)(Control_Lazy.defer1(Text_Parsing_Parser.lazy1ParserT)(function (_) {
        return _type;
    }));
    var parameterListAndReturnType = Control_Lazy.defer1(Text_Parsing_Parser.lazy1ParserT)(function (_) {
        return Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.ParameterListAndReturnType.create)(Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(typeParameters)))(parens(parameterList)))(Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(typeAnnotation));
    });
    var parameterList = (function () {
        var parameter = Control_Lazy.defer1(Text_Parsing_Parser.lazy1ParserT)(function (_) {
            return Text_Parsing_Parser_Combinators.choice(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))([ Text_Parsing_Parser_Combinators["try"](Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.RequiredOrOptionalParameter.create)(Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(publicOrPrivate)))(identifier))(Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(questionMark)(Prelude["return"](Text_Parsing_Parser.monadParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.Optional.value)))))(Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(typeAnnotation))), Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.RestParameter.create)(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(ellipsis)(identifier)))(Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(typeAnnotation)) ]);
        });
        return Control_Lazy.defer1(Text_Parsing_Parser.lazy1ParserT)(function (_) {
            return commaSep(parameter);
        });
    })();
    var objectType = Control_Lazy.defer1(Text_Parsing_Parser.lazy1ParserT)(function (_) {
        return braces(typeBody);
    });
    var indexSignature = Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(squares(Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.IndexSignature.create)(identifier))(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(colon)(stringOrNumber))))(Control_Lazy.defer1(Text_Parsing_Parser.lazy1ParserT)(function (_) {
        return typeAnnotation;
    }));
    var _type = (function () {
        var returnType = Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(arrow)(Control_Lazy.defer1(Text_Parsing_Parser.lazy1ParserT)(function (_) {
            return _type;
        }));
        var predefinedType = Text_Parsing_Parser_Combinators.choice(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))([ Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(reserved("any"))(Prelude["return"](Text_Parsing_Parser.monadParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.AnyType.value)), Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(reserved("number"))(Prelude["return"](Text_Parsing_Parser.monadParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.NumberType.value)), Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(reserved("boolean"))(reserved("bool")))(Prelude["return"](Text_Parsing_Parser.monadParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.BooleanType.value)), Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(reserved("string"))(Prelude["return"](Text_Parsing_Parser.monadParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.StringType.value)), Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(reserved("void"))(Prelude["return"](Text_Parsing_Parser.monadParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.VoidType.value)) ]);
        var functionType = Control_Lazy.defer1(Text_Parsing_Parser.lazy1ParserT)(function (_) {
            return Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.FunctionType.create)(Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(typeParameters)))(parens(parameterList)))(returnType);
        });
        var fold = function (__dict_Monad_569) {
            return function (first) {
                return function (more) {
                    return function (combine) {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_569))(first)(function (_61) {
                            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_569))(Control_Alternative.many(Text_Parsing_Parser.alternativeParserT(__dict_Monad_569))(Text_Parsing_Parser.lazy1ParserT)(Text_Parsing_Parser_Combinators["try"](((__dict_Monad_569["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(more)))(function (_60) {
                                return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_569))(Data_Foldable.foldl(Data_Foldable.foldableArray)(combine)(_61)(_60));
                            });
                        });
                    };
                };
            };
        };
        var constructorType = Control_Lazy.defer1(Text_Parsing_Parser.lazy1ParserT)(function (_) {
            return Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.ConstructorType.create)(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(reserved("new"))(Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(typeParameters))))(parens(parameterList)))(returnType);
        });
        var atomicType = Control_Lazy.defer1(Text_Parsing_Parser.lazy1ParserT)(function (_) {
            return Text_Parsing_Parser_Combinators.choice(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))([ Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.Predefined.create)(predefinedType), Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.TypeReference.create)(typeRef), Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.ObjectType.create)(objectType) ]);
        });
        var arrayType = fold(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(atomicType)(squares(Prelude["return"](Text_Parsing_Parser.monadParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude.unit)))(Prelude.flip(Prelude["const"](Language_TypeScript_Types.ArrayType.create)));
        return Control_Lazy.defer1(Text_Parsing_Parser.lazy1ParserT)(function (_) {
            return Text_Parsing_Parser_Combinators.choice(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))([ arrayType, functionType, constructorType ]);
        });
    })();
    var classOrInterfaceTypeList = commaSep(typeRef);
    var extendsClause = Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(reserved("extends"))(classOrInterfaceTypeList);
    var $$interface = function (com) {
        return Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.Interface.create(com))(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(reserved("interface"))(identifier)))(Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(typeParameters)))(Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(extendsClause)))(objectType);
    };
    var implementsClause = Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(reserved("implements"))(classOrInterfaceTypeList);
    var ambientExternalModuleElement = (function () {
        var externalImportDeclaration = Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.AmbientModuleExternalImportDeclaration.create)(Text_Parsing_Parser_Combinators["try"](Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Apply["<*"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(exported))(reserved("import")))))(identifier))(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(equals)(reserved("require")))(stringLiteral));
        var exportAssignment = Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.ExportAssignment.create)(Control_Apply["<*"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Text_Parsing_Parser_Combinators["try"](Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(reserved("export"))(equals)))(identifier))(semi));
        return Text_Parsing_Parser_Combinators.choice(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))([ Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.AmbientModuleElement.create)(Text_Parsing_Parser_Combinators["try"](Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Lazy.defer1(Text_Parsing_Parser.lazy1ParserT)(function (_) {
            return ambientDeclaration;
        }))), exportAssignment, externalImportDeclaration ]);
    })();
    var ambientDeclaration = (function () {
        var enumMember = Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Data_Tuple.Tuple.create)(propertyName))(Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(equals)(integer)));
        var ambientClassBodyElement = Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Data_Tuple.Tuple.create)(comments))(Text_Parsing_Parser_Combinators.choice(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))([ Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.AmbientConstructorDeclaration.create)(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(reserved("constructor"))(parens(parameterList))), Text_Parsing_Parser_Combinators["try"](Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.AmbientMemberDeclaration.create)(Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(publicOrPrivate)))(Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))($$static)))(propertyName))(Text_Parsing_Parser_Combinators.choice(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))([ Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Data_Either.Right.create)(parameterListAndReturnType), Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Data_Either.Left.create)(Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(typeAnnotation)) ]))), Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.AmbientIndexSignature.create)(indexSignature) ]));
        return Prelude[">>="](Text_Parsing_Parser.bindParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(comments)(function (_59) {
            return Control_Lazy.defer1(Text_Parsing_Parser.lazy1ParserT)(function (_) {
                return Text_Parsing_Parser_Combinators.choice(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))([ Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.AmbientVariableDeclaration.create(_59))(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(reserved("var"))(identifier)))(Control_Apply["<*"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(typeAnnotation))(semi)), Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.AmbientFunctionDeclaration.create(_59))(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(reserved("function"))(identifier)))(Control_Apply["<*"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(parameterListAndReturnType)(semi)), Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.AmbientClassDeclaration.create(_59))(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(reserved("class"))(identifier)))(Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(typeParameters)))(Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(extendsClause)))(Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(implementsClause)))(braces(Text_Parsing_Parser_Combinators.sepEndBy(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(ambientClassBodyElement)(semi))), Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.AmbientInterfaceDeclaration.create)($$interface(_59)), Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.AmbientEnumDeclaration.create(_59))(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(reserved("enum"))(identifier)))(braces(Text_Parsing_Parser_Combinators.sepEndBy(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(enumMember)(comma))), Prelude[">>="](Text_Parsing_Parser.bindParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(reserved("module"))(function () {
                    return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.AmbientModuleDeclaration.create(_59))(Text_Parsing_Parser_Combinators.sepBy(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(identifier)(dot)))(braces(Control_Alternative.many(Text_Parsing_Parser.alternativeParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Text_Parsing_Parser.lazy1ParserT)(Control_Lazy.defer1(Text_Parsing_Parser.lazy1ParserT)(function (__1) {
                        return Text_Parsing_Parser_Combinators["try"](Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(ambientDeclaration);
                    })))))(Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.AmbientExternalModuleDeclaration.create(_59))(stringLiteral))(braces(Control_Alternative.many(Text_Parsing_Parser.alternativeParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Text_Parsing_Parser.lazy1ParserT)(Control_Lazy.defer1(Text_Parsing_Parser.lazy1ParserT)(function (__1) {
                        return Text_Parsing_Parser_Combinators["try"](Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(ambientExternalModuleElement);
                    })))));
                }) ]);
            });
        });
    })();
    var declarationElement = (function () {
        var entityName = (function () {
            var toEntityName = function (_666) {
                if (_666.length === 1) {
                    return new Language_TypeScript_Types.EntityName(Data_Maybe.Nothing.value, _666[0]);
                };
                return new Language_TypeScript_Types.EntityName(Data_Maybe.Just.create(Language_TypeScript_Types.ModuleName.create(Data_Array_Unsafe.init(_666))), Data_Array_Unsafe.last(_666));
            };
            return Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(toEntityName)(Text_Parsing_Parser_Combinators.sepBy1(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(identifier)(dot));
        })();
        return Prelude[">>="](Text_Parsing_Parser.bindParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(comments)(function (_58) {
            return Text_Parsing_Parser_Combinators.choice(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))([ Text_Parsing_Parser_Combinators["try"](Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.InterfaceDeclaration.create)(Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(exported)))($$interface(_58))), Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.ExportDeclaration.create)(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Text_Parsing_Parser_Combinators["try"](Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(reserved("export"))(equals)))(identifier)), Prelude[">>="](Text_Parsing_Parser.bindParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Text_Parsing_Parser_Combinators["try"](Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Apply["<*"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(exported))(reserved("import"))))(function (_57) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Control_Apply["<*"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(identifier)(equals))(function (_56) {
                    return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.ExternalImportDeclaration.create(_57)(_56))(Control_Apply["<*"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(reserved("require"))(parens(stringLiteral)))(semi)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.ImportDeclaration.create(_57)(_56))(entityName));
                });
            }), Prelude["<*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Free.functorFree(Data_Lazy.functorLazy)))(Language_TypeScript_Types.AmbientDeclaration.create(_58))(Text_Parsing_Parser_Combinators.optionMaybe(Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(exported)))(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(reserved("declare"))(ambientDeclaration)) ]);
        });
    })();
    var declarationSourceFile = Control_Apply["<*"](Text_Parsing_Parser.applyParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Control_Alternative.many(Text_Parsing_Parser.alternativeParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Text_Parsing_Parser.lazy1ParserT)(declarationElement))(eof);
    return {
        typeRef: typeRef, 
        _type: _type, 
        typeParameters: typeParameters, 
        indexSignature: indexSignature, 
        stringOrNumber: stringOrNumber, 
        publicOrPrivate: publicOrPrivate, 
        "static": $$static, 
        exported: exported, 
        parameterList: parameterList, 
        parameterListAndReturnType: parameterListAndReturnType, 
        typeAnnotation: typeAnnotation, 
        propertyName: propertyName, 
        typeBody: typeBody, 
        objectType: objectType, 
        classOrInterfaceTypeList: classOrInterfaceTypeList, 
        implementsClause: implementsClause, 
        extendsClause: extendsClause, 
        "interface": $$interface, 
        ambientExternalModuleElement: ambientExternalModuleElement, 
        ambientDeclaration: ambientDeclaration, 
        declarationElement: declarationElement, 
        declarationSourceFile: declarationSourceFile, 
        angles: angles, 
        squares: squares, 
        braces: braces, 
        parens: parens, 
        arrow: arrow, 
        ellipsis: ellipsis, 
        questionMark: questionMark, 
        equals: equals, 
        colon: colon, 
        dot: dot, 
        commaSep1: commaSep1, 
        commaSep: commaSep, 
        comma: comma, 
        semi: semi, 
        stringLiteral: stringLiteral, 
        integer: integer, 
        identifier: identifier, 
        reserved: reserved, 
        matchOne: matchOne, 
        comments: comments, 
        match: match, 
        eof: eof
    };
})();
var PS = PS || {};
PS.Main = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Debug_Trace = PS.Debug_Trace;
    var Node_FS_Sync = PS.Node_FS_Sync;
    var Language_TypeScript_Lexer = PS.Language_TypeScript_Lexer;
    var Control_Monad_Trampoline = PS.Control_Monad_Trampoline;
    var Text_Parsing_Parser = PS.Text_Parsing_Parser;
    var Language_TypeScript_Parser = PS.Language_TypeScript_Parser;
    var Language_TypeScript_Docs = PS.Language_TypeScript_Docs;
    var Node_Yargs_Setup = PS.Node_Yargs_Setup;
    var Node_Yargs_Applicative = PS.Node_Yargs_Applicative;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    var Node_Yargs = PS.Node_Yargs;
    var Node_Encoding = PS.Node_Encoding;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_Eff_Exception = PS.Control_Monad_Eff_Exception;
    var Control_Monad_Free = PS.Control_Monad_Free;
    var Data_Lazy = PS.Data_Lazy;
    var app = function (input) {
        return function (output) {
            return function __do() {
                Debug_Trace.trace("Reading input file...")();
                var _62 = Node_FS_Sync.readTextFile(Node_Encoding.UTF8.value)(input)();
                Debug_Trace.trace("Lexing tokens...")();
                var _1185 = Language_TypeScript_Lexer.lex(_62);
                if (_1185 instanceof Data_Either.Left) {
                    return Debug_Trace.trace("Error from lexer: " + Prelude.show(Control_Monad_Eff_Exception.showError)(_1185.value0))();
                };
                if (_1185 instanceof Data_Either.Right) {
                    Debug_Trace.trace("Parsing TypeScript source...")();
                    var _1187 = Control_Monad_Trampoline.runTrampoline(Text_Parsing_Parser.runParserT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(_1185.value0)(Language_TypeScript_Parser.declarationSourceFile));
                    if (_1187 instanceof Data_Either.Left) {
                        return Debug_Trace.trace("Error from parser: " + _1187.value0.value0.message)();
                    };
                    if (_1187 instanceof Data_Either.Right) {
                        var html = Language_TypeScript_Docs.htmlToString(Language_TypeScript_Docs.generateDocument(_1187.value0));
                        (function () {
                            if (output === "") {
                                return Debug_Trace.trace(html);
                            };
                            return function __do() {
                                Debug_Trace.trace("Writing output file...")();
                                return Node_FS_Sync.writeTextFile(Node_Encoding.UTF8.value)(output)(html)();
                            };
                        })()();
                        return Debug_Trace.trace("Done!")();
                    };
                    throw new Error("Failed pattern match");
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var main = (function () {
        var setup = Node_Yargs_Setup.usage("$0 -i input-file -o output-file");
        return Node_Yargs_Applicative.runY(setup)(Prelude["<*>"](Node_Yargs_Applicative.applyT)(Prelude["<$>"](Node_Yargs_Applicative.functorY)(app)(Node_Yargs_Applicative.yarg(Node_Yargs_Applicative.argString)("i")([ "input" ])(new Data_Maybe.Just("The input file"))(new Data_Either.Right("The input file is required"))(false)))(Node_Yargs_Applicative.yarg(Node_Yargs_Applicative.argString)("o")([ "output" ])(new Data_Maybe.Just("The output file"))(new Data_Either.Left(""))(false)));
    })();
    return {
        main: main, 
        app: app
    };
})();
PS.Main.main();

